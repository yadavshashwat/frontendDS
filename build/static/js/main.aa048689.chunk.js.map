{"version":3,"sources":["helpers/api.jsx","redux/actionTypes/index.js","redux/actions/authorization.js","pages/LoginPage.jsx","pages/Logout.jsx","routing/BreadCrumbIcons.jsx","pages/Dashboard/DashboardPages/SettingsPage.jsx","pages/Dashboard/DashboardPages/ItemCategoryManagement.jsx","pages/Dashboard/DashboardPages/ItemManagement.jsx","pages/Dashboard/DashboardPages/AddEditItem.jsx","pages/Dashboard/DashboardPages/VendorManagement.jsx","pages/Dashboard/DashboardPages/ItemDetails.jsx","pages/Dashboard/DashboardPages/VendorDetails.jsx","pages/ForgetPassword.jsx","pages/Dashboard/DashboardPages/StaffManagement.jsx","routing/RoutesList.jsx","components/DashboardNavigation.jsx","pages/Dashboard/DashboardSidebarApp.jsx","redux/reducers/authorization.js","redux/reducers/index.js","store.js","redux/create.js","routing/MainRouter.js","index.js"],"names":["baseurl","api","url","method","filters","Object","keys","map","key","join","bodyFormData","FormData","value","set","axios","baseURL","data","config","headers","Content-Type","then","response","fileHandlerApi","formData","window","location","hostname","_","mapKeys","returnArgumentsFn","payload","Promise","resolve","authorization","loginUser","createAction","actionTypes","LOGIN_USER","logoutUser","LOGOUT_USER","url_reset","LoginPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmailChange","event","target","setState","email","handlePasswordchange","password","handleForgetPassword","state","message","success","StatusAlertService","showAlert","autoHideTime","catch","error","console","log","handleSubmit","eMail","cookies","Cookies","auth","actions","auth_token","first_name","id","is_staff","last_name","path","browserHistory","push","_this2","get","react_default","a","createElement","className","esm","Grid","GridColumn","medium","Textfield","autoComplete","placeholder","onChange","type","onClick","Button","appearance","Component","contextTypes","showModal","PropTypes","func","onConfirm","onCancel","onClose","connect","store","objectSpread","dispatch","bindActionCreators","Logout","user_id","userId","pathIcon","settings","settings_default","item-category-management","blur_default","items","tray_default","vendors","marketplace_default","staff-management","people_group_default","changeCase","require","StaffPage","breadCrumbElement","Path","pathname","split","row","index","length","textPath","titleCase","link","slice","BreadcrumbsItem","iconBefore","href","text","err","layout","BreadcrumbsStateless","es","to","itemOptions","label","emptyModalData","category","description","sub_category","ItemCategory","hideSearchIcon","searchIcon","showSearchIcon","applyFilter","obj","loaded","payloadData","sort_by","sortValue","order","orderBy","search","searchValue","page_num","page_size","pageSize","categoryValue","x","assign","num_pages","numPages","handleNumItemsChange","pageNum","handlePageClick","selected","handleSortChange","handleCategoryChange","toggleOrderBy","toggle","order_by","clearFilter","handleSearchChange","handleConfModalOpen","dataId","currentTarget","dataset","isConfModalOpen","activeDataId","parseInt","handleConfModalClose","handleDelete","findIndex","concat","toConsumableArray","handleEditModalOpen","data_id","isNew","modalData","isModalOpen","handleAddModalOpen","handleModalClose","submitData","indexCat","categoryOptions","sortByOptions","orderByOptions","submitError","filtersData","JSON","parse","stringify","rowRenderElement","_this3","SearchIconContainer","styled","div","_templateObject","taggedTemplateLiteral","DataWrapper","_templateObject2","SortIconContainer","_templateObject3","cells","content","DropdownMenu","trigger","triggerType","shouldFlip","position","DropdownItemGroup","DropdownItem","data-id","bind","orderByIcon","arrow_up_circle_default","arrow_down_circle_default","alt","src","search_default","onFocus","onBlur","CheckboxSelect","classNamePrefix","options","Select","isClearable","Stateful","isLoading","head","width","isSortable","shouldTruncate","rows","defaultPage","react_paginate_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","previousClassName","nextClassName","subContainerClassName","activeClassName","forcePage","name","ModalTransition","ModalWrapper","autoFocus","height","heading","Form","onSubmit","_ref","formProps","Field","defaultValue","isRequired","_ref2","fieldProps","CreatableSelect","_ref3","_ref4","TextArea","minimumRows","loaderArray","random","Math","MyTextLoader","react_content_loader_es","speed","primaryColor","secondaryColor","y","rx","ry","str","toLowerCase","i","charAt","toUpperCase","checkboxTheme","backgroundColor","borderColor","uncheckedBorderColor","tickColor","urlitemstatusupdate","urlmergeitems","status","statusValue","handleStatusChange","handleStatusModalOpen","isStatusModalOpen","handleStatusModalClose","handleStatusUpdate","itemslist","selectedList","handleMergeConfModalOpen","isMergeConfModalOpen","handleMergeConfModalClose","handleMerge","indexgive","inputlist","selectlist","dataList","dataListNew","selectedItems","handleCheckBoxToggle","totalData","indexOf","indexItem","indexDataItem","splice","handleSelectionRemove","statusOptions","ItemManagement_templateObject","ItemManagement_templateObject2","renderSelectedElement","dist_bundle_default","color","size","tickSize","borderThickness","checked","trash_default","image_details","is_primary","category_details","renderBodyElement","isVendorAdd","existingItems","item_details","handleAddItem","ItemManagement_MyTextLoader","isDisabled","cross_circle_default","url_items","url_image_upload","url_image_delete","AddEditItem","handleItemNameChange","itemNameValue","handleItemDimensionsChange","ItemDimensionsValue","handleItemDescriptionChange","ItemDescriptionValue","handleSellingPriceChange","ItemSellingPrice","ItemSellingPriceValid","handleFileDrop","acceptedFiles","currentState","ImageList","handleImageRemoveClick","indexFile","handleImageDeleteClick","UploadedImages","handleVendorChange","vendorValue","handleSaveItem","SaveItem","handleSaveContinueItems","handleEditItem","submitCheck","checkError","payloadSend","dimensions","sell_price","vendorlist","itemID","updatedMessage","append","noError","errorMessage","isEdit","vendorOptions","defaultState","edit","vendorAdd","is_all","updatedData","selectedVendors","selectedVendor","renderImageElement","URL","createObjectURL","renderUploadedImageElement","dist_es","onDrop","accept","getRootProps","getInputProps","contact_phone","contact_name","pincode","city","source","address","owner_name","owner_phone","company_name","Vendors","cityValue","stateValue","handleCityChange","handleStateChange","indexSource","sourceOptions","cityOptions","stateOptions","sourceValue","states","cities","VendorManagement_templateObject","VendorManagement_templateObject2","VendorManagement_templateObject3","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","numImagesAtaTime","url_itemvendor","url_item","url_vendoritempair","status_dict","to_be_updated","rejected","shortlisted","ready","ItemDetails","hanldleShowAllDescription","descriptionToShow","allDescription","hanldleShowLessDescription","substring","dataVendor","handleStatusValueChange","isStatusUpdate","handleCloseStatus","handleUpdateStatus","handleEditorIconClick","costPrice","costPriceValue","costUpdateModal","handleCostModalClose","handleCostPriceChange","handleCostUpdate","vendor","vendor_details","item","cost_price","handleImagePageClick","newImageList","imagePageNum","ImageListToShow","numImagePages","decodeURIComponent","IMAGES","thumbnail","isSelected","caption","floor","ItemDetails_templateObject","ItemDetails_templateObject2","ItemDetails_templateObject3","edit_default","Gallery_default","enableImageSelection","images","url_vendor","url_vendoritem","url_vendoritempair_post","url_doc_upload","url_document_delete","fileList","dataItems","index2","dataCompare","handleFileRemoveClick","handleNewFiles","dropZoneActive","handleNewFilesClose","isEditModalOpen","handleEditModalClose","handleDocConfModalOpen","isDocConfModalOpen","handleDocConfModalClose","handleDeleteDoc","dataDocuments","handleFileUpload","sourceOption","document_details","VendorDetails_templateObject","VendorDetails_templateObject2","VendorDetails_MyTextLoader","renderUploadedDocuments","rel","document_filled_default","friendly_name","renderDocumentList","ItemManagement","_ref13","handleReset","secString","sec_string","pass","phone_number","StaffManagement_templateObject","StaffManagement_templateObject2","StaffManagement_templateObject3","Routes","pageType","component","AddEditItems","viewLevel","navbarDisplayName","navbarIcon","TrayIcon","Items","VendorDetails","MarketplaceIcon","VendorManagement","Settings","GearIcon","ItemCategoryManagement","redirect","StaffManagement","SignOutIcon","ForgetPassword","DashboardNavigation","core_browser_esm","SideNavigation","testId","NavigationHeader","NestableNavigationContent","initialStack","section","prop","title","Icon","button_item","NavigationFooter","App","loggedIn","navigation","components_DashboardNavigation","children","navOpenState","object","router","handleActions","_handleActions","defineProperty","userFirstName","userLastName","userEmail","userAuthToken","userIsStaff","combineReducers","routing","routerReducer","history","middleware","routerMiddleware","reduxPromise","applyMiddleware","apply","_createStore","finalCreateStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","createStore","BrowserRouter","MainRouter","appWithSidebar","DashboardSidebarApp","onNavResize","isOpen","react_redux_es","dist_default","childContextTypes","ReactDOM","render","MainRouter_MainRouter","document","getElementById"],"mappings":"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","file":"static/js/main.aa048689.chunk.js","sourcesContent":["import axios from 'axios';\n\n// var Production = false;\nlet baseurl = null;\n// let imageUploadUrl = null;\n\n\nif (window.location.hostname === \"localhost\"){\n    baseurl = \"http://localhost:8000/api/\";\n}else{\n    baseurl = \"http://www.thedecorshop.in/api/\";\n}\n\n\n\n\n\n\nexport function api(url, method, filters) {\n\n    if (method === 'get'){\n        var queryString = Object.keys(filters).map(key => key + '=' + filters[key]).join('&');\n        url = url + '?' + queryString\n        filters = {}\n    }\n\n    if (method === 'post-formdata'){\n        method = 'post'\n        var bodyFormData = new FormData();\n        for (const key in filters) {\n            let value = filters[key]\n            bodyFormData.set(key, value);\n        }\n        filters = bodyFormData\n    }\n    \n    return axios({\n        method: method,\n        baseURL: {\n            baseurl\n        }.baseurl,\n        url: url,\n        data: filters,\n        config: {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }\n    }).then(response => response.data)\n}\n\nexport function fileHandlerApi(url,formData) {\n    return axios({\n        method: 'post',\n        baseURL: {\n            baseurl\n        }.baseurl,\n        url: url,\n        data: formData,\n        config: {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n    }).then(response => {\n        return response.data\n    })\n}\n","import _ from 'lodash';\n\nexport default _.mapKeys([\n\n\n    //AUTHORIZATION\n\n        'LOGIN_USER',\n        'LOGOUT_USER',\n\n]);","import {\n    createAction\n} from 'redux-actions';\nimport actionTypes from '../actionTypes';\n\nconst returnArgumentsFn = function (payload) {\n    return Promise.resolve(payload);\n};\n\nexport default {\n    loginUser: createAction(actionTypes.LOGIN_USER, returnArgumentsFn),\n    logoutUser: createAction(actionTypes.LOGOUT_USER, returnArgumentsFn),\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport '@atlaskit/css-reset';\nimport \"../css/dashboard.css\"\n\n//do something...\nimport Page from '@atlaskit/page';\n\n// Backend Connection\nimport { api } from \"../helpers/api\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\nimport authorization from \"../redux/actions/authorization\";\n\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\nimport TextField from '@atlaskit/textfield';\nimport Button from '@atlaskit/button';\nimport Cookies from 'universal-cookie';\nimport { browserHistory  } from 'react-router';\n\nconst url=\"/v1/user/login\";\nconst url_reset=\"/v1/user/reset_request\";\n\nclass LoginPage extends Component {\n  static contextTypes = {\n    showModal: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onCancel: PropTypes.func,\n    onClose: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    }\n  }\n\n  handleEmailChange = event => {\n    var data = event.target.value\n    this.setState({\n      email: data\n    });\n  };\n\n  handlePasswordchange = event => {\n    var data = event.target.value\n    this.setState({\n      password: data\n    });\n  };\n\n  handleForgetPassword = () =>{\n    const payload = {\n      email:this.state.email\n    }\n    api(url_reset, 'post-formdata', payload)\n      .then(response => {\n        const { message, success} = response;   \n        StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:2000})     \n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  }\n\n  handleSubmit = () => {\n    const eMail = this.state.email;\n    const password = this.state.password;\n    const cookies = new Cookies();\n    // console.log(eMail,password)\n    const payload = {\n      email:eMail,\n      password:password\n    }\n    api(url, 'post-formdata' ,payload)\n      .then(response => {\n        const { data, message, success,auth} = response;\n        // console.log(result)        \n        StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:2000})\n  \n        if (success) {\n            this.props.actions.loginUser({\n              auth:auth,\n              auth_token: data.auth_token,\n              email: data.email,\n              first_name: data.first_name,\n              id: data.id,\n              is_staff: data.is_staff,\n              last_name: data.last_name,\n            })\n            cookies.set('auth_token', data.auth_token, { path: '/' });\n            cookies.set('user_id', data.id, { path: '/' });\n            cookies.set('first_name', data.first_name, { path: '/' });\n            cookies.set('last_name', data.last_name, { path: '/' });\n            cookies.set('email', data.email, { path: '/' });\n            browserHistory.push(\"/adminpanel/items\");\n        }else{\n\n            cookies.set('auth_token', '', { path: '/' });\n            cookies.set('user_id', '', { path: '/' });\n            cookies.set('first_name', '', { path: '/' });\n            cookies.set('last_name', '', { path: '/' });\n            cookies.set('email', '', { path: '/' });\n\n          }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n\n  }\n\n\n  componentDidMount(){\n    const cookies = new Cookies();\n    const auth_token = cookies.get('auth_token')\n    const payload={auth_token:auth_token}\n    api(url, 'post-formdata' ,payload)\n      .then(response => {\n        const { data, success, auth} = response;\n        // console.log(result)        \n        if (success) {\n            this.props.actions.loginUser({\n              auth: auth,\n              auth_token: data.auth_token,\n              email: data.email,\n              first_name: data.first_name,\n              id: data.id,\n              is_staff: data.is_staff,\n              last_name: data.last_name,\n            });\n            browserHistory.push(\"/adminpanel/items\");\n        }\n      })\n      .catch(error => {\n        console.log(\"Login Failed\");\n      });\n\n  }\n\n  render() {\n\n      return (\n        \n        <div className=\"outer-login\">\n          <div className=\"middle-login\">\n          <Page>\n  \n            <Grid>\n              <GridColumn medium={3}></GridColumn>\n              <GridColumn medium={6}>\n                <Grid>\n                  <div className=\"inner-login\">\n                    <GridColumn medium={12}>\n  \n                      <div className=\"image-container\">\n                        <div className=\"logo-image\"></div>\n                      </div>\n  \n                    </GridColumn>\n                    <GridColumn medium={12}>\n                    <GridColumn medium={12}>\n                      <div className=\"field-div\">\n                        <TextField autoComplete=\"off\" value={this.state.email} placeholder=\"Email\"  onChange={this.handleEmailChange} />\n                      </div>\n                    </GridColumn>\n                    <GridColumn medium={12}>\n                      <div className=\"field-div\">\n                        <TextField type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handlePasswordchange} />\n                      </div>\n                    </GridColumn>\n                    <GridColumn medium={12}>\n                      <div className=\"forget-password\">\n                        <span className=\"forget-password-message\" onClick={this.handleForgetPassword}>Forgot Password?</span>\n                      </div>\n                    </GridColumn>\n                    <GridColumn medium={12}>\n                      <div className=\"button-row-login\">\n                          <div className=\"login-button\">\n                          <Button onClick={this.handleSubmit} type=\"submit\" appearance=\"warning\">\n                            Login\n                          </Button>\n                          </div>\n                        </div>\n                    </GridColumn>  \n                    </GridColumn>\n                  </div>\n                </Grid>\n              </GridColumn>\n              <GridColumn medium={3}></GridColumn>\n            </Grid>\n            </Page>\n          </div>\n        </div>\n        \n  \n      );\n    }\n  \n    }\n  \n\n\nfunction mapStateToProps(store) {\n  return {\n    ...store.authorization\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ \n      ...authorization\n      }, dispatch)\n  };\n}\n\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage);\n","\nimport React, { Component } from 'react';\n\n\nimport { browserHistory } from 'react-router';\n//do something...\n\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n// Backend Connection\nimport { api } from \"../helpers/api\";\n// Redux \nimport { connect } from \"react-redux\";\nimport Cookies from 'universal-cookie';\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\nimport authorization from \"../redux/actions/authorization\";\n\nconst url=\"/v1/user/logout\";\n\nclass Logout extends Component {\n  \n  componentDidMount(){\n    const cookies = new Cookies();\n    const payload = {user_id:this.props.userId};\n    \n    api(url,'post-formdata' ,payload)\n    .then(response => {\n      const { message, success} = response;\n      StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n\n      // console.log(result)        \n      if (success) {\n          this.props.actions.logoutUser({});\n          cookies.set('auth_token', '', { path: '/' });\n          cookies.set('user_id', '', { path: '/' });\n          browserHistory.push(\"/adminpanel\");\n      }\n\n  });\n}\n\n  render() {\n    return (\n        <div>\n\n        </div>    \n      );\n  }\n}\n\n\nfunction mapStateToProps(store) {\n  return {\n    ...store.authorization\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ \n      ...authorization\n    }, dispatch)\n  };\n}\n\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Logout);\n","import React  from 'react';\n// icons import\nimport GearIcon from '@atlaskit/icon/glyph/settings';\nimport MediaServicesBlurIcon from '@atlaskit/icon/glyph/media-services/blur';\nimport TrayIcon from '@atlaskit/icon/glyph/tray';\nimport MarketplaceIcon from '@atlaskit/icon/glyph/marketplace';\nimport PeopleGroupIcon from '@atlaskit/icon/glyph/people-group';\nconst pathIcon = {\n  \"settings\":<GearIcon/>,\n  \"item-category-management\":<MediaServicesBlurIcon/>,\n  \"items\":<TrayIcon/>,\n  \"vendors\":<MarketplaceIcon/>,\n  \"staff-management\":<PeopleGroupIcon/>,\n\n  \n}\n\n\nexport default pathIcon;\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\n\n\n// Components\n// import ContentWrapper from '../../../components/ContentWrapper';\n\n// Atlaskit Packages\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\n// import { StatusAlertService } from 'react-status-alert'\n// import 'react-status-alert/dist/status-alert.css'\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Icons\nimport MediaServicesBlurIcon from '@atlaskit/icon/glyph/media-services/blur';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\nimport PeopleGroupIcon from '@atlaskit/icon/glyph/people-group';\n// Other\nvar changeCase = require(\"change-case\");\n\nexport default class StaffPage extends Component {\n  render() {\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        var textPath = changeCase.titleCase(Path[index])\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n\n      } else {\n        return null;\n      }\n      \n    });  \n\n    \n    return (\n      <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n          <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={12} className=\"folder-grid\">\n            <Link to=\"/adminpanel/settings/item-category-management\">\n              <div className=\"settings-div\">\n                <div className=\"folder-icon-container-settings\">\n                  <MediaServicesBlurIcon className=\"folder-icon\" />\n                </div>\n                <div className=\"folder-name\">\n                  Item Category Management\n                </div>\n              </div>\n            </Link>\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={12} className=\"folder-grid\">\n            <Link to=\"/adminpanel/settings/staff-management\">\n              <div className=\"settings-div\">\n                <div className=\"folder-icon-container-settings\">\n                  <PeopleGroupIcon className=\"folder-icon\" />\n                </div>\n                <div className=\"folder-name\">\n                  Staff Management\n                </div>\n              </div>\n            </Link>\n          </GridColumn>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n","// React\nimport React, { Component } from 'react';\n\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\nimport DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport { CreatableSelect } from '@atlaskit/select';\nimport DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu';\nimport { CheckboxSelect } from '@atlaskit/select';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Form, { Field } from '@atlaskit/form';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport TextArea from '@atlaskit/textarea';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\n\n// Components\n// import ContentWrapper from '../../../components/ContentWrapper';\n\n// Other Packages\nimport ReactPaginate from 'react-paginate';\nimport styled from \"styled-components\";\nvar changeCase = require(\"change-case\");\n\n\n// api url path\nvar url = \"/v1/itemcats\";\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\nconst itemOptions = [\n  {'value':10,'label':'10 Items/Page'},\n  {'value':20,'label':'20 Items/Page'},\n  {'value':30,'label':'30 Items/Page'},\n  {'value':50,'label':'50 Items/Page'},\n  {'value':100,'label':'100 Items/Page'}\n]\n\nconst emptyModalData = {\n  \"category\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"sub_category\": \"\"\n};\n\nconst deleteConfMessage = \"Are you sure you want to delete the category? Please note that this will not delete any items but will remove category from all assigned items.\"\nconst deleteConfHeader = \"Confirm Item Category Deletion\"\n\nclass ItemCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      \n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      categoryOptions: [],\n      searchIcon: true,\n      categoryValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      \n      // Modal variables\n\n      isModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      modalData: emptyModalData,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n\n    };\n  }\n\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      category: (this.state.categoryValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleCategoryChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ categoryValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ category: data, page_num: 1 });\n    });\n  };\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n  clearFilter = () => {\n    this.setState({\n      categoryValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      pageNum: 1,\n      searchIcon: true\n    }, () => {\n      this.applyFilter();\n    });\n  }\n\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === dataId);\n    api(url + '/' + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      \n      if (success){\n        this.setState({            \n          data: [\n            ...this.state.data.slice(0, index),\n            ...this.state.data.slice(index + 1)\n          ],\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  \n  handleEditModalOpen = event => {\n    const data_id = event.currentTarget.dataset.id\n    this.setState({ isNew: false, activeDataId: parseInt(data_id,10) });\n\n    api(url + '/' + data_id,'get', {}).then(response => {\n      const { data, success } = response;\n      if (success) {\n        this.setState(\n          {\n            modalData: data,\n          }, () => {\n            this.setState({ isModalOpen: true });\n          });\n      }\n    });\n  }\n\n\n  handleAddModalOpen = () => {\n    this.setState({\n      isModalOpen: true,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      isModalOpen: false,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n\n\n  \n  submitData = data => {\n    var submit = true\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === this.state.activeDataId);\n    console.log(index)\n    const categoryList = this.state.categoryOptions;\n    const indexCat = categoryList.findIndex(x => x.value === data.category.value);\n    console.log(indexCat)\n    // console.log(index)\n    if (submit) {\n      this.setState({ loaded: false });\n      if (this.state.isNew) {\n        api(url, 'post' ,{\n          category: data.category.value,\n          sub_category: data.sub_category,\n          description: data.description\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            if (indexCat === -1){\n              this.setState({\n                categoryOptions:[{'value':data.category,'label':changeCase.titleCase(data.category)},...this.state.categoryOptions]\n              })\n            }            \n            this.setState({\n              data: [data, ...this.state.data],\n              loaded: true\n            });\n            this.handleModalClose();  \n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }else{\n        api(url + '/' + this.state.activeDataId,'put', {\n          category: data.category.value,\n          sub_category: data.sub_category,\n          description: data.description,\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            if (indexCat === -1){\n              this.setState({\n                categoryOptions:[{'value':data.category,'label':changeCase.titleCase(data.category)},...this.state.categoryOptions]\n              })\n            }\n            this.setState({            \n              data: [\n                ...this.state.data.slice(0, index),\n                  data,\n                ...this.state.data.slice(index + 1)\n              ],\n              loaded: true,            \n            });\n            this.handleModalClose();\n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }\n    }\n  }\n\n\n  // On Load\n  componentDidMount() {\n    let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n    api(url, 'get', filtersData).then(response => {\n      const { data, filters, success, num_pages } = response;\n      if (success) {\n        this.setState(\n          {\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n            sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n            orderByOptions: JSON.parse(JSON.stringify(filters.order_by)),\n            categoryOptions: JSON.parse(JSON.stringify(filters.category)),\n          }\n        );\n      }\n    });\n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n\n    const DataWrapper = styled.div`\n      width: 100%;\n      padding-top:15px;\n  `  ;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n    const head = {\n      cells: [\n        {\n          key: \"category\",\n          content: \"Category\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"sub_category\",\n          content: \"Sub Category\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"description\",\n          content: \"Description\",\n          width: 30,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"operations\",\n          content: \"Operations\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n      ]\n    }\n\n\n    let rowRenderElement = null;\n    // if (this.state.loaded) {\n    rowRenderElement = this.state.data.map((row, index) => ({\n      key: `row.id`,\n      cells: [\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.category)\n        },\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.sub_category)\n        },\n        {\n          key: row.id,\n          content: row.description\n        },\n        {\n          key: row.id,\n          content: <DropdownMenu\n            trigger=\"Options\"\n            triggerType=\"button\"\n            shouldFlip={false}\n            position=\"bottom\"\n          >\n            <DropdownItemGroup key={row.id}>\n              <DropdownItem data-id={row.id} onClick={this.handleEditModalOpen.bind(this)}>Edit</DropdownItem>\n              <DropdownItem data-id={row.id} onClick={this.handleConfModalOpen.bind(this)}>Delete</DropdownItem>\n            </DropdownItemGroup>\n          </DropdownMenu>\n        },\n      ]\n    }\n    ));\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        var textPath = changeCase.titleCase(Path[index])\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n\n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n        {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n  \n      <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}></GridColumn>\n          <GridColumn medium={2}>\n          <Button onClick={this.handleAddModalOpen} appearance=\"warning\">\n            Add Category\n          </Button>\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={3}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Category</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.categoryOptions}\n                placeholder=\"Categories\"\n                onChange={this.handleCategoryChange}\n                value={this.state.categoryValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={4}>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <DataWrapper>\n          {/* <Grid>\n                <GridColumn medium={12}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>\n              <br></br> */}\n            <DynamicTable\n              isLoading={!this.state.loaded}\n              head={head}\n              rows={rowRenderElement}\n              defaultPage={1}\n              className=\"user-table\"\n            />\n          \n          <Grid>\n                <GridColumn medium={10}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>  \n          </DataWrapper>\n        </Grid>\n        <ModalTransition>\n          {this.state.isModalOpen && (\n\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleModalClose },\n              ]\n            } onClose={this.handleModalClose} height={475} heading={(this.state.isNew ? \"Add\" : \"Edit\") + \" Item Category\"}>\n\n              <Form onSubmit={this.submitData}>\n                {({ formProps }) => (\n                  <form {...formProps}>\n                    <Grid>\n                    <GridColumn medium={12}>\n                        <Field name=\"category\" defaultValue={{ 'value': this.state.modalData.category, 'label': changeCase.titleCase(this.state.modalData.category) }}\n                              label=\"Item Category\" \n                              isRequired>\n                          {({ fieldProps }) => <CreatableSelect options={this.state.categoryOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                      <GridColumn medium={12}>\n                        <Field name=\"sub_category\" defaultValue={this.state.modalData.sub_category}\n                              label=\"Sub Category\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                      <GridColumn medium={12}>\n                        <Field name=\"description\"\n                            defaultValue={this.state.modalData.description}\n                            label=\"Category Description\"                            \n                            // isRequired\n                            >\n                          {({ fieldProps }) => <TextArea\n                          minimumRows = {3} \n                          // placeholder=\"eg. Inference are topics which require xyz\" \n                          {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                    </Grid>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <br></br>\n                        <span className=\"invalid\">{this.state.submitError}</span>\n                        <br></br>\n                        <Button type=\"submit\" appearance=\"warning\">\n                          Submit\n                      </Button>\n                      </GridColumn>\n                    </Grid>\n                  </form>\n                )}\n              </Form>\n            </Modal>\n\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ItemCategory);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\n\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\n// import DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport { CheckboxSelect } from '@atlaskit/select';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\nimport Checkbox from 'react-simple-checkbox';\nimport Form, { Field } from '@atlaskit/form';\n\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport CrossCircleIcon from '@atlaskit/icon/glyph/cross-circle';\n// Components\n\n// Other Packages\nimport ReactPaginate from 'react-paginate';\nimport styled from \"styled-components\";\nimport ContentLoader from \"react-content-loader\";\nvar changeCase = require(\"change-case\");\n\nconst loaderArray = [1,2,3]\nconst random = Math.random() * (1 - 0.7) + 0.9;\n\nconst MyTextLoader = () => (\n  <ContentLoader\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    className=\"contentLoaderStyle\"\n  >\n    <rect x=\"0\" y=\"15\" rx=\"5\" ry=\"5\" width={100 * random} height=\"15\" />\n    <rect x=\"0\" y=\"45\" rx=\"5\" ry=\"5\" width={200 * random} height=\"15\" />\n  </ContentLoader>\n);\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' ');\n}\n\n\nconst checkboxTheme = {\n  backgroundColor:'#fff', \n  borderColor:'#eeb83c', \n  uncheckedBorderColor:'#243859', \n  tickColor:'#eeb83c'\n}\n\n\n// api url path\nvar url = \"/v1/items\";\nvar urlitemstatusupdate = \"/v1/itemsstatusupdate\"\nvar urlmergeitems = \"/v1/itemsmerge\"\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\n// var noImagePath = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/other/nothing_image_new.png\";\nvar noImagePath = \"\";\nconst itemOptions = [\n  {'value':10,'label':'10 Items/Page'},\n  {'value':20,'label':'20 Items/Page'},\n  {'value':30,'label':'30 Items/Page'},\n  {'value':50,'label':'50 Items/Page'},\n  {'value':100,'label':'100 Items/Page'}\n]\n\nconst emptyModalData = {\n  \"category\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"sub_category\": \"\"\n};\n\nconst deleteConfMessage = \"Are you sure you want to delete the item? Please note that this will delete the said item from all vendors etc.\"\nconst deleteConfHeader = \"Confirm Item Deletion\"\nconst mergeConfHeader = \"Confirm Item Merge\"\nconst statusUpdateHeader = \"Update Status of Selected Items\"\n\nclass ItemCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      \n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      categoryOptions: [],\n      statusOptions: [],\n      searchIcon: true,\n      categoryValue: [],\n      statusValue:[],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      selectedList:[],\n      selectedItems:[],\n      // Modal variables\n\n      isModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      modalData: emptyModalData,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n      isStatusModalOpen:false,\n      isMergeConfModalOpen:false\n    };\n  }\n\n  // alert = useAlert()\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      category: (this.state.categoryValue).map(x => x['value']).join(\",\"),\n      status: (this.state.statusValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleCategoryChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ categoryValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ category: data, page_num: 1 });\n    });\n  };\n\n  handleStatusChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ statusValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ status: data, page_num: 1 });\n    });\n  };\n\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n  clearFilter = () => {\n    this.setState({\n      categoryValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      pageNum: 1,\n      searchIcon: true\n    }, () => {\n      this.applyFilter();\n    });\n  }\n\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n  handleStatusModalOpen = () => {\n    this.setState({\n      isStatusModalOpen:true\n    })\n  }\n\n\n  handleStatusModalClose = () => {\n    this.setState({\n      isStatusModalOpen:false\n    })\n  }\n\n  handleStatusUpdate = data => {\n      var itemslist = (this.state.selectedList).join(\",\");\n      this.setState({\n        loaded:false\n      })\n      const payload = {\n        items: itemslist,\n        status: data.status.value,\n      }\n      api(urlitemstatusupdate, 'post-formdata' ,payload).then(response => {\n        const { message, success } = response;\n        StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n        if (success){\n          this.setState({\n            loaded: true,\n          });\n          this.handleStatusModalClose();  \n        }else{\n          this.setState({\n            loaded:true\n          })\n        }\n      });\n\n  }\n\n  handleMergeConfModalOpen = () =>{\n    this.setState({\n      isMergeConfModalOpen:true\n    })\n  }\n  handleMergeConfModalClose = () =>{\n    this.setState({\n      isMergeConfModalOpen:false\n    })\n  }\n\n  handleMerge = () => {\n    console.log('merge query made')\n    var itemslist = (this.state.selectedList).join(\",\");\n    this.setState({\n      loaded:false\n    })\n    const payload = {\n      items: itemslist\n    }\n    \n    function indexgive(inputlist,selectlist, i) {\n      var indexList  = inputlist.findIndex(x => x.id === selectlist[i]);\n      return indexList\n    }\n\n    api(urlmergeitems, 'post-formdata' ,payload).then(response => {\n      const { data, message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        var dataList = this.state.data;\n        var dataListNew = []\n        var index = null\n        for (var i = 0 ; i < this.state.selectedList.length; i++){\n          index = indexgive(dataList,this.state.selectedList, i)\n          dataListNew = [\n            ...dataList.slice(0, index),\n          ...dataList.slice(index + 1)\n          ]\n          dataList = dataListNew\n        }\n        this.setState({\n          loaded: true,\n          selectedList:[],\n          selectedItems:[],\n          data:[...dataList,data]\n        })\n        this.handleMergeConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n\n  }\n\n\n  handleCheckBoxToggle = event => {\n    const dataId = event.currentTarget.dataset.id;\n    var selectedList = this.state.selectedList;\n    var selectedItems = this.state.selectedItems;\n    var totalData = this.state.data;\n\n    const index = selectedList.indexOf(parseInt(dataId));\n    const indexItem = selectedItems.findIndex(x => x.id === parseInt(dataId));  \n    const indexDataItem = this.state.data.findIndex(x => x.id === parseInt(dataId));\n    if (index > -1){\n      selectedList.splice(index, 1);\n      selectedItems = [\n        ...selectedItems.slice(0, indexItem),\n        ...selectedItems.slice(indexItem + 1)\n      ]\n    }else{\n      selectedList.push(parseInt(dataId))\n      selectedItems = [\n        ...selectedItems,\n        totalData[indexDataItem]\n      ]\n    }\n    this.setState({\n      selectedList:selectedList,\n      selectedItems:selectedItems\n    })\n  }\n\n  handleSelectionRemove = () => {\n    this.setState({\n      selectedList:[],\n      selectedItems:[]\n    })\n  }\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === dataId);    \n    api(url + '/' + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          data: [\n            ...this.state.data.slice(0, index),\n            ...this.state.data.slice(index + 1)\n          ],\n          // selectedList:[...this.state.selectedList.slice()]\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n\n  // On Load\n  componentDidMount() {\n    let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n    api(url, 'get', filtersData).then(response => {\n      const { data, filters, success, num_pages } = response;\n      // StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n      if (success) {\n        this.setState(\n          {\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n            sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n            orderByOptions: JSON.parse(JSON.stringify(filters.order_by)),\n            categoryOptions: JSON.parse(JSON.stringify(filters.category)),\n            statusOptions: JSON.parse(JSON.stringify(filters.status)),\n          }\n        );\n      }\n    });\n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n    let renderSelectedElement = null;\n    if (this.state.loaded === true) {\n      renderSelectedElement = null;\n      renderSelectedElement = this.state.selectedItems.map((row, key) => {\n        return (\n          <GridColumn key = {key} medium={2} className=\"item-grid\">\n                <div className=\"item-div\">\n                  <div className=\"item-div-internal\">\n                    <div className=\"item-div-actions\">\n                      <div className=\"item-checkbox\">\n                        <div data-id={row.id} className=\"item-checkbox-container\" onClick={this.handleCheckBoxToggle}>\n                          <Checkbox\n                            color={checkboxTheme}\n                            size={3}\n                            tickSize={3}\n                            borderThickness={2}\n                            className=\"checkbox-style-dashboard\"\n                            checked={this.state.selectedList.indexOf(row.id) > -1 ? true : false}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"item-remove-button\" data-id={row.id} onClick={this.handleConfModalOpen.bind(this)} >\n                        <div className=\"item-remove-icon-container\">\n                          <TrashIcon size={'medium'} ></TrashIcon>\n                        </div>\n                      </div>\n                    </div>\n                    <Link to={\"/adminpanel/items/\" + row.id}>\n                    <div className=\"item-image-container\">\n                      <img alt={row.name} className=\"item-image\" src={row.image_details.length > 0 ? row.image_details[row.image_details.findIndex(x => x.is_primary === true) > 0 ? row.image_details.findIndex(x => x.is_primary === true) : 0].path : noImagePath}/>\n                    </div>\n                    <div className=\"item-name\">\n                      {changeCase.titleCase(row.name)} \n                      <br></br>\n                      {row.category_details && (\n                        <div className=\"category-pill\">{row.category_details ? titleCase(row.category_details.category + \" - \" + row.category_details.sub_category): \"\"}</div>\n                      )}\n                    </div>\n                    </Link>\n                  </div>  \n              </div>\n          </GridColumn>\n        );\n      }\n    )} \n\n    let renderBodyElement = null;\n    if (this.state.loaded === true) {\n      renderBodyElement = null;\n      renderBodyElement = this.state.data.map((row, key) => {\n        if (this.props.isVendorAdd){\n          return (\n            <GridColumn key = {key} medium={2} className=\"item-grid\">\n                  <div className=\"item-div-vendor-add\">\n                    <div className=\"item-div-internal-vendor-add\">\n                      <div className=\"item-image-container-vendor-add\">\n                        <img alt={row.name} className=\"item-image-vendor-add\" src={row.image_details.length > 0 ? row.image_details[row.image_details.findIndex(x => x.is_primary === true) > 0 ? row.image_details.findIndex(x => x.is_primary === true) : 0].path : noImagePath}/>\n                      </div>\n                      <div className=\"item-name-vendor-add\">\n                        {changeCase.titleCase(row.name)} \n                        <br></br>\n                        {row.category_details && (\n                          <div className=\"category-pill\">{row.category_details ? titleCase(row.category_details.category + \" - \" + row.category_details.sub_category): \"\"}</div>\n                        )}\n                      </div>\n                      <div data-id={row.id} onClick={this.props.existingItems.findIndex(x => x.item_details.id === row.id) >= 0 ? \"\" : this.props.handleAddItem} className={this.props.existingItems.findIndex(x => x.item_details.id === row.id) >= 0 ? \"\" : \"add-remove-toggle-add\"}>\n                        {this.props.existingItems.findIndex(x => x.item_details.id === row.id) >= 0 ? \"\" : \"Add\"}\n                      </div>\n                    </div>  \n                </div>\n            </GridColumn>\n    );\n    }else{\n          return (\n            <GridColumn key = {key} medium={2} className=\"item-grid\">\n                  <div className=\"item-div\">\n                    <div className=\"item-div-internal\">\n                      <div className=\"item-div-actions\">\n                        <div className=\"item-checkbox\">\n                          <div data-id={row.id} className=\"item-checkbox-container\" onClick={this.handleCheckBoxToggle}>\n                            <Checkbox\n                              color={checkboxTheme}\n                              size={3}\n                              tickSize={3}\n                              borderThickness={2}\n                              className=\"checkbox-style-dashboard\"\n                              checked={this.state.selectedList.indexOf(row.id) > -1 ? true : false}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"item-remove-button\" data-id={row.id} onClick={this.handleConfModalOpen.bind(this)} >\n                          <div className=\"item-remove-icon-container\">\n                            <TrashIcon size={'medium'} ></TrashIcon>\n                          </div>\n                        </div>\n                      </div>\n                      <Link to={\"/adminpanel/items/\" + row.id}>\n                      <div className=\"item-image-container\">\n                        <img alt={row.name} className=\"item-image\" src={row.image_details.length > 0 ? row.image_details[row.image_details.findIndex(x => x.is_primary === true) > 0 ? row.image_details.findIndex(x => x.is_primary === true) : 0].path : noImagePath}/>\n                      </div>\n                      <div className=\"item-name\">\n                        {changeCase.titleCase(row.name)} \n                        <br></br>\n                        {row.category_details && (\n                          <div className=\"category-pill\">{row.category_details ? titleCase(row.category_details.category + \" - \" + row.category_details.sub_category): \"\"}</div>\n                        )}\n                      </div>\n                      </Link>\n                    </div>  \n                </div>\n            </GridColumn>\n    );\n\n        }\n\n      });\n    } else {\n      renderBodyElement = loaderArray.map((row, key) => {\n        return (\n                <GridColumn key={key} medium={2} className=\"item-grid\">\n                      <div className=\"item-div\">\n                        <div className=\"item-div-internal\">\n                          <div className=\"item-image-container\">\n                          </div>\n                          <div className=\"item-name\">\n                            <MyTextLoader/>\n                          </div>\n                        </div>  \n                    </div>\n\n                </GridColumn>\n        );\n      });\n    }\n  \n\n\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        var textPath = changeCase.titleCase(Path[index])\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n          {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n      {/* <StatusAlert/> */}\n      <div className=\"dashboard-page\">\n        {!this.props.isVendorAdd && (\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        )}\n        {!this.props.isVendorAdd && (\n        <Grid layout=\"fluid\">\n          <GridColumn medium={8}></GridColumn>\n\n          <GridColumn medium={4}>\n            <div className=\"button-row\">\n              <div className=\"button-container\">\n                <Button onClick={this.handleMergeConfModalOpen} isDisabled={this.state.selectedList.length > 1 ? false : true} appearance=\"warning\">\n                  Merge Items\n                </Button>\n              </div>\n              <div className=\"button-container\">\n              <Button onClick={this.handleStatusModalOpen} isDisabled={this.state.selectedList.length > 0 ? false : true} appearance=\"warning\">\n                Update Status\n              </Button>\n              </div>\n            <Link to={'/adminpanel/items/add-item'}>\n              <div className=\"button-container\">\n              <Button appearance=\"warning\">\n                Add Item\n              </Button>\n              </div>\n            </Link>\n          </div>\n          </GridColumn>\n        </Grid>\n        )}\n\n        {(!this.props.isVendorAdd && this.state.selectedList.length > 0) && (\n        <Grid layout=\"fluid\">\n            <span className=\"selected-item-count\">\n              Items Selected: {this.state.selectedList.length}\n            </span>\n            <span className=\"remove-selected-button\">\n                <CrossCircleIcon onClick={this.handleSelectionRemove} size={'medium'} ></CrossCircleIcon>\n            </span>\n        </Grid>\n        )}\n        \n\n        <Grid layout=\"fluid\">\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={4}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Category</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.categoryOptions}\n                placeholder=\"Categories\"\n                onChange={this.handleCategoryChange}\n                value={this.state.categoryValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={3}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Status</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.statusOptions}\n                placeholder=\"Status\"\n                onChange={this.handleStatusChange}\n                value={this.state.statusValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          {renderBodyElement} \n        </Grid>\n        \n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}>\n          {(this.state.loaded && this.state.numPages > 1) && (\n          <ReactPaginate\n            previousLabel={'<'}\n            nextLabel={'>'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={this.state.numPages}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={this.handlePageClick}\n            containerClassName={'pagination'}\n            previousClassName={'pagination-next'}\n            nextClassName={'pagination-next'}\n            subContainerClassName={'pages-pagination'}\n            activeClassName={'active'}\n            forcePage={this.state.pageNum - 1}\n          />\n          )}\n          </GridColumn>\n          <GridColumn medium={2}>            \n          <div className=\"field-div-pagination\">\n          <Select\n            name=\"numItems\"\n            options={itemOptions}\n            // placeholder=\"4,5,6...\"\n            onChange={this.handleNumItemsChange}\n            value={this.state.pageSize}\n          />\n          </div>\n          </GridColumn>\n        </Grid>  \n        {this.state.selectedList.length > 0 && (  \n        <div>\n        <hr></hr>   \n          <span><b>Current Selection</b></span>\n        </div>\n        )}     \n        {this.state.selectedList.length > 0 && (  \n            <Grid layout=\"fluid\">\n              \n              {renderSelectedElement}\n            </Grid>\n          )}    \n          \n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isMergeConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleMerge },\n                { text: 'Close', appearance: 'normal', onClick: this.handleMergeConfModalClose },\n              ]\n            } onClose={this.handleMergeConfModalClose} heading={mergeConfHeader}>\n                Are you sure you want to merge the selected items? Once confirmed action cannot be reversed. The merging will follow the following logic:\n                <ul>\n                  <li><b>Name:</b> Name of merged item will take the longest availaible names</li>\n                  <li><b>Description:</b> Description of merged item will take the longest availaible description</li>\n                  <li><b>Dimesions:</b> Dimesions of merged item will take the longest availaible dimesions</li>\n                  <li><b>Status:</b> Status of merged item will take the latest status i.e. if status of one of the items is ready then status would be ready</li>\n                  <li><b>Category:</b> Category of merged item would be first availaible category system finds</li>\n                  <li><b>Selling Price:</b> Selling price would be lowest selected selling price for selected item</li>\n                  <li><b>Images:</b> All images would be merged. Duplicates would be present</li>\n                  <li><b>Vendors:</b> All vendors would be merged. Cost price would be lowest price for the vendor for selected items</li>\n                </ul>\n            </Modal>\n\n          )}\n        </ModalTransition>\n\n        <ModalTransition>\n          {this.state.isStatusModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleStatusModalClose },\n              ]\n            } onClose={this.handleStatusModalClose} height={350} heading={statusUpdateHeader}>\n\n              <Form onSubmit={this.handleStatusUpdate}>\n                {({ formProps }) => (\n                  <form {...formProps}>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <Field name=\"status\"\n                              label=\"Status\" \n                              defaultValue={this.state.statusOptions[0]}\n                              isRequired\n                              >\n                          {({ fieldProps }) => <Select options={this.state.statusOptions} \n                            {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n                    </Grid>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <br></br>\n                        <br></br>\n                        <Button type=\"submit\" appearance=\"warning\">\n                          Update\n                      </Button>\n                      </GridColumn>\n                    </Grid>\n                  </form>\n                )}\n              </Form>\n            </Modal>\n          )}\n        </ModalTransition>\n\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ItemCategory);\n","// React\nimport React, { Component } from 'react';\n// import { Link } from 'react-router';\nimport Dropzone from 'react-dropzone'\n\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api,fileHandlerApi } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\nimport TextField from '@atlaskit/textfield';\nimport TextArea from '@atlaskit/textarea';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport { CheckboxSelect } from '@atlaskit/select';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n//Icons\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\n\n// Components\n\n// Other Packages\nvar changeCase = require(\"change-case\");\n\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' ');\n}\n\n// api url path\nvar url_items = \"/v1/items\";\nvar url_category = \"/v1/itemcats\";\nvar url_vendor = \"/v1/vendors\";\nvar url_itemvendor = \"/v1/itemvendors/\";\nvar url_image_upload = \"/v1/itemimageupload/\";\nvar url_image_delete = \"/v1/itemimagedelete/\";\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\n\n\n\nclass AddEditItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      isEdit:false,\n      // form variables\n      categoryOptions: [],\n      categoryValue: [],\n      vendorOptions: [],\n      vendorValue: [],\n      itemNameValue:\"\",     \n      ItemDescriptionValue:\"\",\n      ItemDimensionsValue:\"\",\n      ItemSellingPrice:\"\",\n      ItemSellingPriceValid:true,\n      ImageList:[],\n      UploadedImages:[],\n      itemID: \"\",\n      isVendorAdd:false,\n    };\n    this.defaultState = this.state;\n\n  }\n\n  \n\n\n  handleItemNameChange = event => {\n    var data = event.target.value\n    this.setState({ itemNameValue: data});\n  };\n\n  handleItemDimensionsChange = event => {\n    var data = event.target.value\n    this.setState({ ItemDimensionsValue: data});\n  };\n\n  handleItemDescriptionChange = event => {\n    var data = event.target.value\n    this.setState({ ItemDescriptionValue: data});\n  };\n\n  \n  handleSellingPriceChange = event => {\n    var data = event.target.value\n    if (data >= 0) {\n      this.setState({\n        ItemSellingPrice: data,\n        ItemSellingPriceValid: true\n      });\n    } else {\n      this.setState({\n        ItemSellingPrice: \"\",\n        ItemSellingPriceValid: false\n      });\n    }\n  };\n\n  handleFileDrop = acceptedFiles => {\n    const currentState = this.state.ImageList\n    var indexFile = NaN\n    function indexgive(i) {\n      var indexList  = currentState.findIndex(x => x.path === acceptedFiles[i].path);\n      return indexList\n    }\n\n    for(var i = 0; i < acceptedFiles.length ; i += 1) {\n      indexFile = indexgive(i);\n      if(indexFile < 0 ){\n        currentState.push(acceptedFiles[i])\n      }\n    }\n    this.setState({\n      ImageList:currentState\n    })\n  }\n\n  handleImageRemoveClick = event =>{\n    const path = event.currentTarget.dataset.id\n    // console.log(path)\n    var currentState = this.state.ImageList\n    var indexFile = currentState.findIndex(x => x.path === path);\n    this.setState({ImageList: [\n        ...currentState.slice(0, indexFile),\n        ...currentState.slice(indexFile + 1)\n      ]\n    })\n    \n  }\n  \n\n  handleImageDeleteClick = event =>{\n    const dataId = event.currentTarget.dataset.id\n    var currentState = this.state.UploadedImages\n    var indexFile = currentState.findIndex(x => x.id === parseInt(dataId));\n    \n    api(url_image_delete  + dataId, 'delete' ,{}).then(response => {\n    const { message, success } = response;\n    StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n    if (success){\n      this.setState({UploadedImages: [\n        ...currentState.slice(0, indexFile),\n        ...currentState.slice(indexFile + 1)\n      ]\n    });\n    }\n  })\n  .catch(error => console.log(error))\n}\n\nhandleVendorChange = value => {\n  // const data = (value).map(x => x['value']).join(\",\");\n  this.setState({ vendorValue: value});\n};\n\n\n  handleCategoryChange = value => {\n    this.setState({ categoryValue: value })\n    \n\n  }\n\n  handleSaveItem = () =>{\n    this.SaveItem('save');\n  }\n\nhandleSaveContinueItems = () =>{\n    this.SaveItem('continue');\n}\n\n\nhandleEditItem = () => {\n  const submitCheck = this.checkError();\n  this.setState({\n    loaded:false\n  })\n  if (submitCheck){\n  const payloadSend = {\n      name: this.state.itemNameValue,\n      category: this.state.categoryValue ? this.state.categoryValue.value : '',\n      description: this.state.ItemDescriptionValue,\n      dimensions: this.state.ItemDimensionsValue,\n      sell_price: this.state.ItemSellingPrice,\n      vendorlist : this.state.vendorValue.map(x => x['value']).join(\",\")\n    }\n  api(url_items + '/' + this.state.itemID, 'put' ,payloadSend)\n  .then(response => {\n    const { data, message, success } = response;\n    var updatedMessage = message\n    if (this.state.ImageList.length > 0){\n      updatedMessage = message + \" Uploading Images\"\n    }\n    StatusAlertService.showAlert(updatedMessage, success ? 'info': 'error',{autoHideTime:1000})\n    if (success){\n      const formData = new FormData();\n      for(var i = 0; i < this.state.ImageList.length ; i += 1) {\n        formData.append(\"file\", this.state.ImageList[i]);          \n      }\n      if (this.state.ImageList.length > 0){\n        fileHandlerApi(url_image_upload + data.id ,formData)\n        .then(response => {\n          const {data, message, success } = response;\n          StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n        if (success){\n          this.setState({\n            ImageList:[],\n            loaded:true ,\n            UploadedImages:[...this.state.UploadedImages,...data]             \n          });\n          }\n        }).catch(error => console.log(error))\n\n      }else{\n        this.setState({\n          ImageList:[],\n          loaded:true,   \n          UploadedImages:[...this.state.UploadedImages]             \n        });\n      }\n    }else{\n      this.setState({\n        loaded:true\n      })\n    }\n  })\n  .catch(error => console.log(error))\n  }else{\n  this.setState({\n    loaded:true\n  })\n}\n};    \n\n  checkError = () => {\n    var noError = true\n    var errorMessage = \"\"\n    // console.log('check')\n    if (this.state.itemNameValue === \"\"){\n        noError = false;\n        errorMessage = \"Missing Item Name!\"\n    }\n\n    if (!noError){\n      StatusAlertService.showAlert(errorMessage, 'error',{autoHideTime:1000})\n    }\n    return noError\n}\n\n  SaveItem = (type) => {\n    // console.log('here')\n    const submitCheck = this.checkError();\n    this.setState({\n      loaded:false\n    })\n    if (submitCheck){\n    const payloadSend = {\n        name: this.state.itemNameValue,\n        category: this.state.categoryValue ? this.state.categoryValue.value : '',\n        description: this.state.ItemDescriptionValue,\n        dimensions: this.state.ItemDimensionsValue,\n        sell_price: this.state.ItemSellingPrice,\n        vendorlist : this.state.vendorValue.map(x => x['value']).join(\",\")\n      }\n    // console.log(payloadSend)\n    api(url_items, 'post' ,payloadSend)\n    .then(response => {\n      const { data, message, success } = response;\n      var updatedMessage = message\n      if (this.state.ImageList.length > 0){\n        updatedMessage = message + \" Uploading Images\"\n      }\n      StatusAlertService.showAlert(updatedMessage, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n \n        const formData = new FormData();\n        for(var i = 0; i < this.state.ImageList.length ; i += 1) {\n          formData.append(\"file\", this.state.ImageList[i]);          \n        }\n        if (this.state.ImageList.length > 0){\n          fileHandlerApi(url_image_upload + data.id ,formData)\n          .then(response => {\n            const { message, success } = response;\n            StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            if(type===\"save\"){    \n              this.setState({\n                itemNameValue:\"\",     \n                ItemDescriptionValue:\"\",\n                ItemDimensionsValue:\"\",\n                ItemSellingPrice:\"\",\n                ItemSellingPriceValid:true,\n                categoryValue:\"\",\n                vendorValue:[],\n                ImageList:[],\n                loaded:true              \n              });\n            }else{\n              this.setState({\n                itemNameValue:\"\",     \n                ItemDescriptionValue:\"\",\n                ItemDimensionsValue:\"\",\n                ItemSellingPrice:\"\",\n                ItemSellingPriceValid:true,\n                ImageList:[],\n                loaded:true                            \n              });\n              console.log('here1')\n            } \n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n          }).catch(error => console.log(error))\n\n        }else{\n          if(type===\"save\"){    \n            this.setState({\n              itemNameValue:\"\",     \n              ItemDescriptionValue:\"\",\n              ItemDimensionsValue:\"\",\n              ItemSellingPrice:\"\",\n              ItemSellingPriceValid:true,\n              vendorValue:[],\n              categoryValue:\"\",\n              ImageList:[],\n              loaded:true              \n            });            \n          }else{\n            this.setState({\n              itemNameValue:\"\",     \n              ItemDescriptionValue:\"\",\n              ItemDimensionsValue:\"\",\n              ItemSellingPrice:\"\",\n              ItemSellingPriceValid:true,\n              ImageList:[],\n              loaded:true                            \n            });\n          } \n        }\n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    })\n    .catch(error => console.log(error))\n  }else{\n    this.setState({\n      loaded:true\n    })\n  }\n};    \n\n\n  // On Load\n  componentDidMount() {\n    var Path = window.location.pathname.split(\"/\")\n    var edit = false\n    var itemID = Path[3]\n    var vendorAdd = false\n    if(Path[4] === \"edit-item\"){\n      this.setState({\n        isEdit:true,\n        itemID: itemID\n      })\n      edit = true\n    } else if (Path[4]===\"add-item\" && Path[2]=== \"vendors\") {\n      this.setState({\n        isVendorAdd:true\n      })\n      vendorAdd = true\n    } \n\n    // console.log(Path[3],Path[4],itemID)\n    if (edit){\n      api(url_items + '/' + itemID, 'get', {}).then(response => {\n        const { data, success } = response;\n        if (success) {\n          this.setState(\n            {\n              categoryValue: data.category_details ? {'value':data.category_details.id,'label':titleCase(data.category_details.category + ' - '+ data.category_details.sub_category)}:\"\",\n              itemNameValue:data.name,     \n              ItemDescriptionValue:data.description,\n              ItemDimensionsValue:data.dimensions,\n              ItemSellingPrice:data.sell_price,\n              UploadedImages:data.image_details\n            }\n          );\n\n          let filtersData =  {  is_all: \"1\" }\n          api(url_category, 'get', filtersData).then(response => {\n            const { data, success } = response;\n            if (success) {\n              var categoryOptions = []        \n              var updatedData = JSON.parse(JSON.stringify(data));\n              for(var i = 0; i < updatedData.length ; i += 1) {\n                  var value = updatedData[i]['id']\n                  var label = titleCase(updatedData[i]['category'] + ' - ' +updatedData[i]['sub_category'])\n                  categoryOptions.push({'value':value,'label':label})\n              }\n              this.setState(\n                {\n                  categoryOptions: categoryOptions,\n                }\n              );\n              api(url_vendor, 'get', filtersData).then(response => {\n                const { data, success } = response;\n                if (success){\n                  var vendorOptions = []        \n                  var updatedData = JSON.parse(JSON.stringify(data));\n                  \n                  for(var i = 0; i < updatedData.length ; i += 1) {\n                      var value = updatedData[i]['id']\n                      var label = titleCase(updatedData[i]['company_name'])\n                      vendorOptions.push({'value':value,'label':label})\n                  }\n                  this.setState(\n                    {\n                      vendorOptions: vendorOptions,\n                    }\n                  );  \n\n                  api(url_itemvendor + itemID, 'get', {}).then(response => {\n                    const { data, success } = response;\n                    if(success){\n                      var selectedVendors = []        \n                      var updatedData = JSON.parse(JSON.stringify(data));\n                      for(var i = 0; i < updatedData.length ; i += 1) {\n                          var value = updatedData[i]['vendor_details']['id']\n                          var label = titleCase(updatedData[i]['vendor_details']['company_name'])\n                          selectedVendors.push({'value':value,'label':label})\n                      }\n                      this.setState(\n                        {\n                          loaded: true,\n                          vendorValue: selectedVendors,\n                        }\n                      );\n    \n\n                    }});\n\n\n                }});\n\n\n            }\n          });\n        }\n      });\n    }else{\n      let filtersData =  {  is_all: 1 }\n      api(url_category, 'get', filtersData).then(response => {\n        const { data, success } = response;\n        if (success) {\n          var categoryOptions = []        \n          var updatedData = JSON.parse(JSON.stringify(data));\n          var selectedVendor = []\n          for(var i = 0; i < updatedData.length ; i += 1) {\n              var value = updatedData[i]['id']\n              var label = titleCase(updatedData[i]['category'] + ' - ' +updatedData[i]['sub_category'])\n              categoryOptions.push({'value':value,'label':label})\n          }\n          this.setState(\n            {\n              categoryOptions: categoryOptions,\n            }\n          );\n          api(url_vendor, 'get', filtersData).then(response => {\n            const { data, success } = response;\n            if (success){\n              var vendorOptions = []        \n              var updatedData = JSON.parse(JSON.stringify(data));\n              for(var i = 0; i < updatedData.length ; i += 1) {\n                  var value = updatedData[i]['id']\n                  var label = titleCase(updatedData[i]['company_name'])\n                  vendorOptions.push({'value':value,'label':label})\n                  if (vendorAdd && updatedData[i]['id'] === parseInt(Path[3])){\n                    selectedVendor = [{'value':value,'label':label}]\n                  }\n\n              }\n              if (vendorAdd){\n                this.setState(\n                  {\n                    vendorOptions: vendorOptions,\n                    vendorValue:selectedVendor,\n                    loaded: true\n                  }\n                );  \n              }else{\n                this.setState(\n                  {\n                    vendorOptions: vendorOptions,\n                    loaded: true\n                  }\n                );  \n              }\n          \n            }});\n\n        \n        \n        }\n      });\n  \n    }\n  }\n\n\n  render() {\n\n    let renderImageElement = null;\n    \n    renderImageElement = this.state.ImageList.map((row, key) => {\n    return (\n            <GridColumn key = {key} medium={1} className=\"item-grid\">\n                  <div className=\"image-div\">\n                    <div className=\"image-div-internal\">\n                      <div className=\"image-image-container\">\n                        <img alt=\"to-upload-images\" className=\"image-image\" src={ URL.createObjectURL(row)}/>\n                      </div>\n                      <div data-id={row.path}  className=\"remove-image\" onClick={this.handleImageRemoveClick}>\n                        Remove\n                      </div>\n                    </div>  \n                </div>\n            </GridColumn>\n    );\n  });\n    \n  let renderUploadedImageElement = null;\n    \n  renderUploadedImageElement = this.state.UploadedImages.map((row, key) => {\n  return (\n          <GridColumn key = {key} medium={1} className=\"item-grid\">\n                <div className=\"image-div\">\n                  <div className=\"image-div-internal\">\n                    <div className=\"image-image-container\">\n                      <img alt=\"uploaded-images\" className=\"image-image\" src={row.path}/>\n                    </div>\n                    <div data-id={row.id}  className=\"delete-image\" onClick={this.handleImageDeleteClick}>\n                      Delete\n                    </div>\n                  </div>  \n              </div>\n          </GridColumn>\n  );\n});\n\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    var textPath = \"\"\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        if(this.state.isEdit){\n          if(index === 3){\n            textPath = changeCase.titleCase(this.state.itemNameValue)              \n          }else{\n            textPath = changeCase.titleCase(Path[index])\n          }  \n        }else{\n\n          if(index === 3){\n            if (Path[2] === \"vendors\"){\n              console.log(Path[2])\n              textPath = changeCase.titleCase(this.state.vendorValue.length > 0 ? this.state.vendorValue[0].label : \"\")  \n            }else{\n              textPath = changeCase.titleCase(Path[index])\n            }\n          }else{\n            textPath = changeCase.titleCase(Path[index])\n          }  \n          // var textPath = changeCase.titleCase(Path[index])\n        }\n        \n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n\n    return (\n      <div>\n        {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n        <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <br></br>\n        <Grid layout=\"fluid\">\n          <h3>{this.state.isEdit ? \"Edit\": \"Add\"} Item</h3>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={6}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Item Name<span className=\"is-required\">*</span></span>\n                    <TextField \n                        placeholder=\"Metal Vase etc.\"\n                        name=\"ItemName\" \n                        label=\"Item Name\" \n                        onChange={this.handleItemNameChange}\n                        value={this.state.itemNameValue}\n                        />\n              </div>\n          </GridColumn>\n          <GridColumn medium={6}>\n              <div className=\"field-div\">\n                    <span className=\"field-label\">Item Category</span>\n                      <Select\n                        name=\"folderValue\"\n                        options={this.state.categoryOptions}\n                        // placeholder=\"CAT QBank 1...\"\n                        onChange={this.handleCategoryChange}\n                        value= {this.state.categoryValue}\n                      />\n                </div>          \n            </GridColumn>\n            <GridColumn medium={6}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Item Dimensions</span>\n                    <TextField \n                        placeholder=\"10 X 10 X 10 etc.\"\n                        name=\"ItemName\" \n                        label=\"Item Name\" \n                        onChange={this.handleItemDimensionsChange}\n                        value={this.state.ItemDimensionsValue}\n                        />\n              </div>\n          </GridColumn>\n          <GridColumn medium={6}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Selling Price (INR)</span>\n                    <TextField \n                        placeholder=\"500, 1000 etc.\"\n                        name=\"ItemName\" \n                        label=\"Item Name\" \n                        type=\"number\"\n                        onChange={this.handleSellingPriceChange}\n                        value={this.state.ItemSellingPrice}\n                        />\n              </div>\n          </GridColumn>\n\n\n            <GridColumn medium={12}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Item Description</span>\n                    <TextArea \n                        placeholder=\"bronze piece etc.\"\n                        name=\"ItemDescription\" \n                        label=\"Item Name\" \n                        minimumRows={3}\n                        onChange={this.handleItemDescriptionChange}\n                        value={this.state.ItemDescriptionValue}\n                        />\n              </div>\n          </GridColumn>\n\n          <GridColumn medium={12}>\n            <div className=\"field-div\">\n                <span className=\"field-label\">Vendors</span>\n                <CheckboxSelect\n                  className=\"checkbox-select\"\n                  classNamePrefix=\"select\"\n                  options={this.state.vendorOptions}\n                  placeholder=\"Vendors\"\n                  isDisabled={this.state.isVendorAdd}\n                  onChange={this.handleVendorChange}\n                  value={this.state.vendorValue}\n                />\n              </div>\n          </GridColumn>\n\n\n          <GridColumn medium={12}>\n          <div className=\"field-div\">\n                <span className=\"field-label\">Item Images</span>\n                <Dropzone \n                  onDrop={acceptedFiles => this.handleFileDrop(acceptedFiles)}\n                  accept='image/jpeg, image/png'\n                >\n                  {({getRootProps, getInputProps}) => (\n                    <section className=\"drop-container\">\n                      <div {...getRootProps({className: 'dropzone'})}>\n                        <input {...getInputProps()} />\n                          Drag 'n' drop some files here, or click to select files\n                      </div>\n                    </section>\n                  )}\n          </Dropzone>\n          </div>\n          </GridColumn>\n          {(this.state.ImageList.length > 0)  && (\n            <div className=\"image-list\">\n            {renderImageElement}  \n            </div>\n          )}\n          <GridColumn medium={12}>\n          {(this.state.isEdit)  && (\n              <div className=\"button-row\">\n              <div className=\"button-container\">\n                <Button isDisabled={!this.state.loaded} onClick={this.handleEditItem.bind(this)} appearance=\"warning\">Update</Button>\n              </div>\n            </div>\n          )}\n          {(!this.state.isEdit && !this.state.isVendorAdd)  && (\n              <div className=\"button-row\">\n              <div className=\"button-container\">\n                <Button isDisabled={!this.state.loaded} onClick={this.handleSaveItem.bind(this)} appearance=\"warning\">Add</Button>\n              </div>\n              <div className=\"button-container\">\n                <Button isDisabled={!this.state.loaded} onClick={this.handleSaveContinueItems.bind(this)} appearance=\"warning\">Add and Continue</Button>\n              </div>\n            </div>\n\n          )}\n          {(!this.state.isEdit && this.state.isVendorAdd)  && (\n              <div className=\"button-row\">\n              <div className=\"button-container\">\n                <Button isDisabled={!this.state.loaded} onClick={this.handleSaveContinueItems.bind(this)} appearance=\"warning\">Add</Button>\n              </div>\n            </div>\n\n          )}\n\n          </GridColumn>\n          <GridColumn medium={12}>\n          {(this.state.UploadedImages.length > 0 && this.state.isEdit)  && (\n            <div className=\"field-div\">\n              <span className=\"field-label\">Current Images</span>\n              <div className=\"image-list\">\n                {renderUploadedImageElement}  \n              </div>\n            </div>\n          )}\n          </GridColumn>\n        </Grid>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddEditItem);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\nimport DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport { CreatableSelect } from '@atlaskit/select';\nimport DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu';\nimport { CheckboxSelect } from '@atlaskit/select';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Form, { Field } from '@atlaskit/form';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\n\n// Components\n// import ContentWrapper from '../../../components/ContentWrapper';\n\n// Other Packages\nimport ReactPaginate from 'react-paginate';\nimport styled from \"styled-components\";\nvar changeCase = require(\"change-case\");\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' ');\n}\n\n\n// api url path\nvar url = \"/v1/vendors\";\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\nconst itemOptions = [\n  {'value':10,'label':'10 Items/Page'},\n  {'value':20,'label':'20 Items/Page'},\n  {'value':30,'label':'30 Items/Page'},\n  {'value':50,'label':'50 Items/Page'},\n  {'value':100,'label':'100 Items/Page'}\n]\n\nconst emptyModalData = {\n        \"id\": \"\",\n        \"contact_phone\": \"\",\n        \"contact_name\": \"\",\n        \"pincode\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"source\": \"\",\n        \"address\": \"\",\n        \"owner_name\": \"\",\n        \"owner_phone\": \"\",\n        \"company_name\": \"\",\n        \"email\": \"\"\n    }\nconst deleteConfMessage = \"Are you sure you want to delete the vendor? Please note that this will not delete any items but will remove this vendor from all items.\"\nconst deleteConfHeader = \"Confirm Vendor Deletion\"\n\n\nclass Vendors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      \n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      cityOptions: [],\n      stateOptions: [],\n      sourceOptions: [],\n\n      searchIcon: true,\n      sourceValue: [],\n      cityValue: [],\n      stateValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      \n      // Modal variables\n\n      isModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      modalData: emptyModalData,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n\n    };\n  }\n\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      city: (this.state.cityValue).map(x => x['value']).join(\",\"),\n      state: (this.state.stateValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleCityChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ cityValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ city: data, page_num: 1 });\n    });\n  };\n\n  handleStateChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ stateValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ state: data, page_num: 1 });\n    });\n  };\n\n\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === dataId);\n    api(url + '/' + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          data: [\n            ...this.state.data.slice(0, index),\n            ...this.state.data.slice(index + 1)\n          ],\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  \n  handleEditModalOpen = event => {\n    const data_id = event.currentTarget.dataset.id\n    this.setState({ isNew: false, activeDataId: parseInt(data_id,10) });\n\n    api(url + '/' + data_id,'get', {}).then(response => {\n      const { data, success } = response;\n      if (success) {\n        this.setState(\n          {\n            modalData: data,\n          }, () => {\n            this.setState({ isModalOpen: true });\n          });\n      }\n    });\n  }\n\n\n  handleAddModalOpen = () => {\n    this.setState({\n      isModalOpen: true,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      isModalOpen: false,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n\n\n  \n  submitData = data => {\n    var submit = true\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === this.state.activeDataId);\n    const sourceList = this.state.sourceOptions;\n    const indexSource = sourceList.findIndex(x => x.value === data.source.value);\n\n    // console.log(index)\n    if (submit) {\n      this.setState({ loaded: false });\n      if (this.state.isNew) {\n        api(url, 'post' ,{\n          company_name: data.company_name,\n          owner_name: data.owner_name,\n          owner_phone: data.owner_phone,\n          contact_name: data.contact_name,\n          contact_phone: data.contact_phone,\n          city: data.city.value,\n          state: data.state.value,\n          address: data.address,\n          pincode: data.pincode,\n          source: data.source.value,\n          email: data.email,\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            if (indexSource === -1){\n              this.setState({\n                sourceOptions:[{'value':data.source,'label':changeCase.titleCase(data.source)},...this.state.sourceOptions]\n              })\n            }            \n\n\n            this.setState({\n              data: [data, ...this.state.data],\n              loaded: true\n            });\n            this.handleModalClose();  \n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }else{\n        api(url + '/' + this.state.activeDataId,'put', {\n          company_name: data.company_name,\n          owner_name: data.owner_name,\n          owner_phone: data.owner_phone,\n          contact_name: data.contact_name,\n          contact_phone: data.contact_phone,\n          city: data.city.value,\n          state: data.state.value,\n          address: data.address,\n          pincode: data.pincode,\n          source: data.source.value,\n          email: data.email,\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            if (indexSource === -1){\n              this.setState({\n                sourceOptions:[{'value':data.source,'label':changeCase.titleCase(data.source)},...this.state.sourceOptions]\n              })\n            }            \n\n            this.setState({            \n              data: [\n                ...this.state.data.slice(0, index),\n                  data,\n                ...this.state.data.slice(index + 1)\n              ],\n              loaded: true,            \n            });\n            this.handleModalClose();\n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }\n    }\n  }\n\n\n  // On Load\n  componentDidMount() {\n    let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n    api(url, 'get', filtersData).then(response => {\n      const { data, filters, success, num_pages } = response;\n      if (success) {\n        this.setState(\n          {\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n            sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n            orderByOptions: JSON.parse(JSON.stringify(filters.order_by)),\n            stateOptions: JSON.parse(JSON.stringify(filters.states)),\n            cityOptions: JSON.parse(JSON.stringify(filters.cities)),\n            sourceOptions: JSON.parse(JSON.stringify(filters.source))\n          }\n        );\n      }\n    });\n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n\n    const DataWrapper = styled.div`\n      width: 100%;\n      padding-top:15px;\n  `  ;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n    const head = {\n      cells: [\n        {\n          key: \"company\",\n          content: \"Company\",\n          width: 25,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"owner_details\",\n          content: \"Owner Details\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"other_contact\",\n          content: \"Other Contact Details\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"address\",\n          content: \"City & State\",\n          width: 15,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"operations\",\n          content: \"Operations\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n      ]\n    }\n\n    let rowRenderElement = null;\n    // if (this.state.loaded) {\n    rowRenderElement = this.state.data.map((row, index) => ({\n      key: `row.id`,\n      cells: [\n        {\n          key: row.id,\n          content: <Link to={\"/adminpanel/vendors/\" + row.id}><span className=\"company-name-table\">{changeCase.titleCase(row.company_name)}</span></Link>\n        },\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.owner_name ? row.owner_name : \"\") + (row.owner_phone ? \" (\" + row.owner_phone + \")\" : \"\")\n        },\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.contact_name ? row.contact_name : \"\") + (row.contact_phone? \" (\" + row.contact_phone + \")\" : \"\")\n        },\n        {\n          key: row.id,\n          content: titleCase(row.city + \", \"+row.state)\n        },\n        {\n          key: row.id,\n          content: <DropdownMenu\n            trigger=\"Options\"\n            triggerType=\"button\"\n            shouldFlip={false}\n            position=\"bottom\"\n          >\n            <DropdownItemGroup key={row.id}>\n              <Link to={\"/adminpanel/vendors/\" + row.id}><DropdownItem data-id={row.id}>Open</DropdownItem></Link>\n              <DropdownItem data-id={row.id} onClick={this.handleEditModalOpen.bind(this)}>Edit</DropdownItem>\n              <DropdownItem data-id={row.id} onClick={this.handleConfModalOpen.bind(this)}>Delete</DropdownItem>\n            </DropdownItemGroup>\n          </DropdownMenu>\n        },\n      ]\n    }\n    ));\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        var textPath = changeCase.titleCase(Path[index])\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n\n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n                {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n\n      <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}></GridColumn>\n          <GridColumn medium={2}>\n          <Button onClick={this.handleAddModalOpen} appearance=\"warning\">\n            Add Vendor\n          </Button>\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">City</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.cityOptions}\n                placeholder=\"City\"\n                onChange={this.handleCityChange}\n                value={this.state.cityValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">State</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.stateOptions}\n                placeholder=\"State\"\n                onChange={this.handleStateChange}\n                value={this.state.stateValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={3}>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <DataWrapper>\n          {/* <Grid>\n                <GridColumn medium={12}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>\n              <br></br> */}\n            <DynamicTable\n              isLoading={!this.state.loaded}\n              head={head}\n              rows={rowRenderElement}\n              defaultPage={1}\n              className=\"user-table\"\n            />\n          \n          <Grid>\n                <GridColumn medium={10}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>  \n          </DataWrapper>\n        </Grid>\n        <ModalTransition>\n          {this.state.isModalOpen && (\n\n            <Modal autoFocus={false}  width={'80%'}  actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleModalClose },\n              ]\n            } onClose={this.handleModalClose} height={600} heading={(this.state.isNew ? \"Add\" : \"Edit\") + \" Vendor\"}>\n\n              <Form onSubmit={this.submitData}>\n                {({ formProps }) => (\n                  <form {...formProps}>\n                    <Grid>\n                    <GridColumn medium={6}>\n                        <Field name=\"company_name\" defaultValue={this.state.modalData.company_name}\n                              label=\"Company Name\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"company_email\" defaultValue={this.state.modalData.email}\n                              label=\"Company Email\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"owner_name\" defaultValue={this.state.modalData.owner_name}\n                              label=\"Owner Name\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"owner_phone\" defaultValue={this.state.modalData.owner_phone}\n                              label=\"Owner Phone\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"contact_name\" defaultValue={this.state.modalData.contact_name}\n                              label=\"Other Contact Name\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"contact_phone\" defaultValue={this.state.modalData.contact_phone}\n                              label=\"Other Contact Phone\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"address\" defaultValue={this.state.modalData.address}\n                              label=\"Address\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n\n                    <GridColumn medium={3}>\n                        <Field name=\"city\" defaultValue={{ 'value': this.state.modalData.city, 'label': changeCase.titleCase(this.state.modalData.city) }}\n                              label=\"City\" \n                              >\n                          {({ fieldProps }) => <Select options={this.state.cityOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n                      <GridColumn medium={3}>\n                        <Field name=\"state\" defaultValue={{ 'value': this.state.modalData.state, 'label': changeCase.titleCase(this.state.modalData.state) }}\n                              label=\"State\" \n                              >\n                          {({ fieldProps }) => <Select options={this.state.stateOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n\n                    <GridColumn medium={4}>\n                        <Field name=\"pincode\" defaultValue={this.state.modalData.pincode}\n                              label=\"Pincode\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    \n\n                      <GridColumn medium={8}>\n                        <Field name=\"source\" defaultValue={{ 'value': this.state.modalData.source, 'label': changeCase.titleCase(this.state.modalData.source) }}\n                              label=\"Source\" \n                              >\n                          {({ fieldProps }) => <CreatableSelect options={this.state.sourceOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                    </Grid>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <br></br>\n                        <span className=\"invalid\">{this.state.submitError}</span>\n                        <br></br>\n                        <Button type=\"submit\" appearance=\"warning\">\n                          Submit\n                      </Button>\n                      </GridColumn>\n                    </Grid>\n                  </form>\n                )}\n              </Form>\n            </Modal>\n\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Vendors);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\nimport DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu';\nimport { CheckboxSelect } from '@atlaskit/select';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport Gallery from 'react-grid-gallery';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\nimport EditorEditIcon from '@atlaskit/icon/glyph/editor/edit';\n// Components\n\n// Other Packages\nimport ReactPaginate from 'react-paginate';\nimport styled from \"styled-components\";\nvar changeCase = require(\"change-case\");\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' ');\n}\n\nvar numImagesAtaTime = 4;\n// api url path\n\nvar url_itemvendor = \"/v1/itemvendors/\";\nvar url_item = \"/v1/items/\";\nvar url_vendoritempair = \"/v1/vendoritemspair/\";\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\n\nconst itemOptions = [\n  {'value':10,'label':'10 Items/Page'},\n  {'value':20,'label':'20 Items/Page'},\n  {'value':30,'label':'30 Items/Page'},\n  {'value':50,'label':'50 Items/Page'},\n  {'value':100,'label':'100 Items/Page'}\n]\n\nconst emptyModalData = {\n        \"id\": \"\",\n        \"contact_phone\": \"\",\n        \"contact_name\": \"\",\n        \"pincode\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"source\": \"\",\n        \"address\": \"\",\n        \"owner_name\": \"\",\n        \"owner_phone\": \"\",\n        \"company_name\": \"\",\n        \"email\": \"\"\n    }\n\nconst status_dict = {\n  'to_be_updated':'To Be Updated',\n  'rejected':'Rejected',\n  'shortlisted':'Shortlisted',\n  'ready':'Ready',\n}\n\nconst statusOptions = [{'value':'to_be_updated','label':'To Be Updated'},\n                       {'value':'rejected','label':'Rejected'},\n                       {'value':'shortlisted','label':'Shortlisted'},\n                       {'value':'ready','label':'Ready'}\n                      ]\nconst deleteConfMessage = \"Are you sure you want to remove the vendor? Please note that this will not delete the vendor but will remove this vendor the items.\"\nconst deleteConfHeader = \"Confirm Vendor Removal\"\n\n\nclass ItemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataVendor:[],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      ImageList:[],\n      ImageListToShow:[],\n      numImagePages:1,\n      imagePageNum:1,\n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      cityOptions: [],\n      stateOptions: [],\n      sourceOptions: [],\n\n      searchIcon: true,\n      sourceValue: [],\n      cityValue: [],\n      stateValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      costPriceValue:\"\",\n      \n      // Modal variables\n      descriptionToShow:\"\",\n      allDescription:false,\n      isModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      modalData: emptyModalData,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n      costUpdateModal:false,\n      isStatusUpdate:false,\n      statusValue:\"\",\n    };\n  }\n\n  hanldleShowAllDescription = () => {\n    this.setState({\n      descriptionToShow: this.state.data.description,\n      allDescription:true\n    })\n  }\n\n  hanldleShowLessDescription = () => {\n    this.setState({\n      descriptionToShow: this.state.data.description.substring(0, 200),\n      allDescription:false\n    })\n  }\n\n\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      city: (this.state.cityValue).map(x => x['value']).join(\",\"),\n      state: (this.state.stateValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url_itemvendor + this.state.data.id ,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            dataVendor: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleStatusValueChange = value => {\n    this.setState({ statusValue: value })\n  };\n\n  handleCityChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ cityValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ city: data, page_num: 1 });\n    });\n  };\n\n  handleStateChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ stateValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ state: data, page_num: 1 });\n    });\n  };\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.dataVendor;\n    const index = dataList.findIndex(x => x.id === dataId);\n    console.log(index)\n    api(url_vendoritempair  + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          dataVendor: [\n            ...this.state.dataVendor.slice(0, index),\n            ...this.state.dataVendor.slice(index + 1)\n          ],\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  handleStatusChange = () => {\n    this.setState({\n      isStatusUpdate:true\n    })\n  }\n\n  handleCloseStatus = () => {\n    this.setState({\n      isStatusUpdate:false\n    })\n  }\n\n  handleUpdateStatus = () => {\n    api(url_item  + this.state.data.id, 'put' ,{'name': this.state.data.name, 'status':this.state.statusValue.value})\n  .then(response => {\n    const { data, message, success } = response;\n    StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          data:data,\n          loaded: true,  \n          isStatusUpdate:false  \n        });\n      }\n  })\n}\n\n\n  handleEditorIconClick = event => {\n    const dataId = event.currentTarget.dataset.id;\n    const dataList = this.state.dataVendor;\n    const index = dataList.findIndex(x => x.id === parseInt(dataId,10));\n    console.log(index,dataList,dataId)\n    var costPrice = this.state.dataVendor[index]['cost_price']\n    this.setState({\n      activeDataId: parseInt(dataId,10),\n      costPriceValue: costPrice,\n      costUpdateModal:true\n    })\n  }\n\n  handleCostModalClose = () => {\n    this.setState({\n      activeDataId: \"\",\n      costPriceValue: \"\",\n      costUpdateModal:false\n    })\n  }\n\n  handleCostPriceChange = event => {\n    var data = event.target.value\n      // this.setState({\n      //   costPriceValue: data,\n      // });\n   \n    if (data >= 0) {\n      this.setState({\n        costPriceValue: data,\n      });\n    } else {\n      this.setState({\n        costPriceValue: \"\",\n      });\n    }\n  };\n\n  handleCostUpdate = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.dataVendor;\n    const index = dataList.findIndex(x => x.id === parseInt(dataId));\n\n    // console.log(index)\n    const payload = {\n      'vendor':dataList[index].vendor_details.id,\n      'item':this.state.data.id,\n      'cost_price':this.state.costPriceValue\n    }\n    api(url_vendoritempair  + dataId, 'put',payload).then(response => {\n      const { data, message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          dataVendor: [\n            ...this.state.dataVendor.slice(0, index),\n            data,\n            ...this.state.dataVendor.slice(index + 1)\n          ],\n          loaded: true,    \n          activeDataId:\"\",\n          costUpdateModal:false\n        });\n      }\n    });\n\n  }\n \n  handleImagePageClick = data => {\n    let selected = data.selected;\n    var newImageList = [...this.state.ImageList.slice(data.selected * numImagesAtaTime, data.selected * numImagesAtaTime + numImagesAtaTime)]\n    this.setState({ \n      imagePageNum: selected + 1,\n      ImageListToShow:newImageList\n    });\n\n  };\n\n\n\n  // On Load\n  componentDidMount() {\n    var Path = window.location.pathname.split(\"/\")\n    var textPath = null;\n    textPath = decodeURIComponent(Path[3])\n    console.log(textPath)\n    let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n\n    \n    api(url_item + textPath, 'get', {}).then(response => {\n      const { data, success } = response;\n      if (success) {\n\n        var IMAGES = []\n        for(var i = 0; i < data.image_details.length; i++){\n          // var meta = getMeta(data.image_details[i].path)\n          IMAGES.push(\n            {\n              src: data.image_details[i].path,\n              thumbnail: data.image_details[i].path,\n              isSelected: false,\n              caption: \"\"\n            }\n          )\n        }\n        var descriptionToShow = data.description.substring(0, 200);\n        var numImagePages = Math.floor(data.image_details.length/numImagesAtaTime) + (data.image_details.length%numImagesAtaTime === 0 ? 0 : 1)\n        var ImageListToShow = [...IMAGES.slice(0,numImagesAtaTime)]\n        this.setState(\n          {\n            ImageList:IMAGES,\n            data: data,\n            descriptionToShow:descriptionToShow,\n            statusValue:{'value':data.status,'label':status_dict[data.status]},\n            numImagePages: numImagePages,\n            ImageListToShow:ImageListToShow\n          }\n        );\n\n        api(url_itemvendor + textPath, 'get', filtersData).then(response => {\n          const { data, filters, success, num_pages } = response;\n          if (success) {\n            this.setState(\n              {\n                dataVendor: data,\n                loaded: true,\n                numPages: num_pages,\n                sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n                orderByOptions: JSON.parse(JSON.stringify(filters.order_by)),\n                stateOptions: JSON.parse(JSON.stringify(filters.states)),\n                cityOptions: JSON.parse(JSON.stringify(filters.cities)),\n                sourceOptions: JSON.parse(JSON.stringify(filters.source))\n              }\n            );\n          }\n        });\n    \n      }\n    });\n\n\n\n\n\n    \n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n\n    const DataWrapper = styled.div`\n      width: 100%;\n      padding-top:15px;\n  `  ;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n    const head = {\n      cells: [\n        {\n          key: \"company\",\n          content: \"Company\",\n          width: 25,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"owner_details\",\n          content: \"Owner Details\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"address\",\n          content: \"City & State\",\n          width: 15,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"cost_price\",\n          content: \"Cost\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"operations\",\n          content: \"Operations\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n      ]\n    }\n\n\n    let rowRenderElement = null;\n    // if (this.state.loaded) {\n    rowRenderElement = this.state.dataVendor.map((row, index) => ({\n      key: `row.id`,\n      cells: [\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.vendor_details.company_name)\n        },\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.vendor_details.owner_name ? row.vendor_details.owner_name : \"\") + (row.vendor_details.owner_phone ? \" (\" + row.vendor_details.owner_phone + \")\" : \"\")\n        },\n        {\n          key: row.id,\n          content: titleCase(row.vendor_details.city + \", \"+row.vendor_details.state)\n        },\n        {\n          key: row.id,\n          content: <div className=\"cost-price-container\">\n                      <div className=\"cost-price\">\n                          {\"₹ \" + row.cost_price}\n                      </div>\n                      <div data-id={row.id} onClick={this.handleEditorIconClick.bind(this)} className=\"cost-price-icon\">\n                        <EditorEditIcon />\n                      </div>\n                  </div>\n        },\n        {\n          key: row.id,\n          content: <DropdownMenu\n            trigger=\"Options\"\n            triggerType=\"button\"\n            shouldFlip={false}\n            position=\"bottom\"\n          >\n            <DropdownItemGroup key={row.vendor_details.id}>\n              <Link to={\"/adminpanel/vendors/\" + row.vendor_details.id}><DropdownItem data-id={row.vendor_details.id}>Open</DropdownItem></Link>\n              <DropdownItem data-id={row.id} onClick={this.handleConfModalOpen.bind(this)}>Remove</DropdownItem>\n            </DropdownItemGroup>\n          </DropdownMenu>\n        },\n      ]\n    }\n    ));\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    var textPath = \"\"\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        textPath = \"\"\n        if (index === 3){\n          textPath = this.state.data ? changeCase.titleCase(this.state.data.name) : \"\"\n        }else{\n          textPath = changeCase.titleCase(Path[index])\n        }\n        \n        \n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n\n\n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n                {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n\n      <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}></GridColumn>\n          <GridColumn medium={2}>\n            <Link to={\"/adminpanel/items/\" + this.state.data.id + \"/edit-item\"}>\n              <Button  appearance=\"warning\">\n              Edit Item\n              </Button>\n            </Link>\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <h3>Item Details</h3>\n        </Grid>\n        <hr></hr>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={6}>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Name</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.name ? titleCase(this.state.data.name) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Category</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.category_details ? titleCase(this.state.data.category_details.category) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Sub Category</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.category_details? titleCase(this.state.data.category_details.sub_category) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Dimensions</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.dimensions? this.state.data.dimensions : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Description</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.description? this.state.descriptionToShow : \"\"}</span> <span onClick={this.state.allDescription ? this.hanldleShowLessDescription : this.hanldleShowAllDescription} className={this.state.data.description ?  ((this.state.data.description).length > 200 ? \"read-more-button-display\" :  \"no-read-more-button-display\") : \"no-read-more-button-display\"} >... Show {this.state.allDescription ? \"Less\": \"More\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Selling Price</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.sell_price? (\"₹ \" + this.state.data.sell_price) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Status</b></span></GridColumn> \n                {this.state.isStatusUpdate && (\n                  \n                <GridColumn medium={4} className=\"status-update-button-row\"> \n                  <Select\n                  className=\"single-select\"\n                  classNamePrefix=\"react-select\"\n                  options={statusOptions}\n                  placeholder=\"Status\"\n                  value={this.state.statusValue}\n                  onChange={this.handleStatusValueChange}\n                />\n                <Button appearance={\"warning\"} onClick={this.handleUpdateStatus}>\n                  Update\n                </Button>\n                <Button appearance={\"info\"} onClick={this.handleCloseStatus}>\n                  Close\n                </Button>\n\n                </GridColumn>\n                )}\n                {!this.state.isStatusUpdate && (\n                <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.status ? status_dict[this.state.data.status] : \"\"}</span>\n                &nbsp;&nbsp;&nbsp;&nbsp;<Button appearance={\"info\"} onClick={this.handleStatusChange}>\n                  Change\n                </Button>\n          </GridColumn>\n\n                )}\n              </Grid>\n\n          </GridColumn>\n          <GridColumn medium={6}>            \n            <Gallery enableImageSelection={false} images={this.state.ImageListToShow}/>\n            {(this.state.loaded && this.state.numImagePages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numImagePages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handleImagePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.imagePageNum - 1}\n                />\n                )}\n          </GridColumn>\n        </Grid>\n        <br></br>\n        <Grid layout=\"fluid\">\n          <h3>Listed Vendors</h3>\n        </Grid>\n        <hr></hr>\n        <Grid layout=\"fluid\">        \n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">City</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.cityOptions}\n                placeholder=\"City\"\n                onChange={this.handleCityChange}\n                value={this.state.cityValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">State</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.stateOptions}\n                placeholder=\"State\"\n                onChange={this.handleStateChange}\n                value={this.state.stateValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={3}>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <DataWrapper>\n          {/* <Grid>\n                <GridColumn medium={12}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>\n              <br></br> */}\n            <DynamicTable\n              isLoading={!this.state.loaded}\n              head={head}\n              rows={rowRenderElement}\n              defaultPage={1}\n              className=\"user-table\"\n            />\n          \n          <Grid>\n                <GridColumn medium={10}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>  \n          </DataWrapper>\n        </Grid>\n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.costUpdateModal && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Update', appearance: 'warning', onClick: this.handleCostUpdate },\n                { text: 'Close', appearance: 'normal', onClick: this.handleCostModalClose },\n              ]\n            } onClose={this.handleCostModalClose} heading={\"Update Vendor Cost\"}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Cost Price (INR)</span>\n                    <TextField \n                        placeholder=\"500, 1000 etc.\"\n                        name=\"CostPrice\" \n                        label=\"Cost Price\" \n                        type=\"number\"\n                        onChange={this.handleCostPriceChange}\n                        value={this.state.costPriceValue}\n                        />\n              </div>\n\n            </Modal>\n\n          )}\n        </ModalTransition>\n\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ItemDetails);\n","// React\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\n\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api,fileHandlerApi } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\n// import DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport { CreatableSelect } from '@atlaskit/select';\nimport { CheckboxSelect } from '@atlaskit/select';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Form, { Field } from '@atlaskit/form';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport Dropzone from 'react-dropzone'\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\nimport EditorEditIcon from '@atlaskit/icon/glyph/editor/edit';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport DocumentFilledIcon from '@atlaskit/icon/glyph/document-filled';\n// Components\n// import ContentWrapper from '../../../components/ContentWrapper';\nimport ItemsPage from \"../DashboardPages/ItemManagement\"\n// Other Packages\nimport styled from \"styled-components\";\nimport ContentLoader from \"react-content-loader\";\nvar changeCase = require(\"change-case\");\n\nconst loaderArray = [1,2,3]\nconst random = Math.random() * (1 - 0.7) + 0.9;\n\nconst MyTextLoader = () => (\n  <ContentLoader\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    className=\"contentLoaderStyle\"\n  >\n    <rect x=\"0\" y=\"15\" rx=\"5\" ry=\"5\" width={100 * random} height=\"15\" />\n    <rect x=\"0\" y=\"45\" rx=\"5\" ry=\"5\" width={200 * random} height=\"15\" />\n  </ContentLoader>\n);\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(' ');\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \n  }\n  return str.join(' ');\n}\n\n\n\n// api url path\nvar url_vendor = \"/v1/vendors/\";\nvar url_vendoritem = \"/v1/vendoritems/\";\nvar url_vendoritempair = \"/v1/vendoritemspair/\";\nvar url_vendoritempair_post = \"/v1/vendoritemspair\";\nvar url_doc_upload = \"/v1/vendordocupload/\";\nvar url_document_delete = \"/v1/vendordocdelete/\"\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\n// var noImagePath = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/other/nothing_image_new.png\";\nvar noImagePath = \"\";\n\n\n\nconst deleteConfMessage = \"Are you sure you want to delete the vendor Item? Please note that this will not delete any items but will remove vendor from the given item.\"\nconst deleteConfHeader = \"Confirm Vendor Item Removal\"\n\nconst deleteDocConfMessage = \"Are you sure you want to delete the vendor document?\"\nconst deleteDocConfHeader = \"Confirm Vendor Document Deletion\"\n\nclass ItemCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n      dataItems: [],\n      dataCompare:[],\n      dataDocuments:[],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      \n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      categoryOptions: [],\n      categoryValue: [],\n      statusOptions: [],\n      statusValue: [],\n      searchIcon: true,\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      cityOptions:[],\n      stateOptions:[],\n      sourceOption:[],\n      \n      // Modal variables\n\n      isModalOpen: false,\n      isEditModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n      fileList:[],\n      dropZoneActive:false\n\n    };\n  }\n\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n\n  handleFileDrop = acceptedFiles => {\n    const currentState = this.state.fileList\n    var indexFile = NaN\n    function indexgive(i) {\n      var indexList  = currentState.findIndex(x => x.path === acceptedFiles[i].path);\n      return indexList\n    }\n    for(var i = 0; i < acceptedFiles.length ; i += 1) {\n      indexFile = indexgive(i)\n      if(indexFile < 0 ){\n        currentState.push(acceptedFiles[i])\n      }\n    }\n    this.setState({\n      fileList:currentState\n    })\n  }\n\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      category: (this.state.categoryValue).map(x => x['value']).join(\",\"),\n      status: (this.state.statusValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url_vendoritem + this.state.data.id ,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            dataItems: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleCategoryChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ categoryValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ category: data, page_num: 1 });\n    });\n  };\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n  handleEditorIconClick = event => {\n    const dataId = event.currentTarget.dataset.id;\n    const dataList = this.state.dataItems;\n    const index = dataList.findIndex(x => x.id === parseInt(dataId,10));\n    console.log(index,dataList,dataId)\n    var costPrice = this.state.dataItems[index]['cost_price']\n    this.setState({\n      activeDataId: parseInt(dataId,10),\n      costPriceValue: costPrice,\n      costUpdateModal:true\n    })\n  }\n\n  handleCostModalClose = () => {\n    this.setState({\n      activeDataId: \"\",\n      costPriceValue: \"\",\n      costUpdateModal:false\n    })\n  }\n\n  handleCostPriceChange = event => {\n    var data = event.target.value\n      // this.setState({\n      //   costPriceValue: data,\n      // });\n   \n    if (data >= 0) {\n      this.setState({\n        costPriceValue: data,\n      });\n    } else {\n      this.setState({\n        costPriceValue: \"\",\n      });\n    }\n  };\n\n  handleCostUpdate = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.dataItems;\n    const index = dataList.findIndex(x => x.id === parseInt(dataId));\n\n    // console.log(index)\n    const payload = {\n      'vendor': this.state.data.id,\n      'item':dataList[index].item_details.id,\n      'cost_price':this.state.costPriceValue\n    }\n    api(url_vendoritempair  + dataId, 'put',payload).then(response => {\n      const { data, message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          dataItems: [\n            ...this.state.dataItems.slice(0, index),\n            data,\n            ...this.state.dataItems.slice(index + 1)\n          ],\n          loaded: true,    \n          activeDataId:\"\",\n          costUpdateModal:false\n        });\n      }\n    });\n\n  }\n\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.dataItems;\n    const index = dataList.findIndex(x => x.id === parseInt(dataId));\n\n    const dataList2 = this.state.dataCompare;\n    const index2 = dataList2.findIndex(x => x.id === parseInt(dataId));\n\n    console.log(index)\n    api(url_vendoritempair + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          dataItems: [\n            ...this.state.dataItems.slice(0, index),\n            ...this.state.dataItems.slice(index + 1)\n          ],\n          dataCompare: [\n            ...this.state.dataCompare.slice(0, index2),\n            ...this.state.dataCompare.slice(index2 + 1)\n          ],\n\n\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  handleAddItem = event => {\n    const dataId = event.currentTarget.dataset.id;\n    const payload = {\n      'vendor': this.state.data.id,\n      'item':dataId,\n      'cost_price':\"\"\n    }\n\n    api(url_vendoritempair_post, 'post',payload).then(response => {\n      const { data, message, success } = response;\n      StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          dataItems: [\n            ...this.state.dataItems,\n            data,\n          ],\n          dataCompare: [\n            ...this.state.dataCompare,\n            data,\n          ],\n          loaded: true,    \n        });\n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  handleFileRemoveClick = event =>{\n    const path = event.currentTarget.dataset.id\n    // console.log(path)\n    var currentState = this.state.fileList\n    var indexFile = currentState.findIndex(x => x.path === path);\n    this.setState({fileList: [\n        ...currentState.slice(0, indexFile),\n        ...currentState.slice(indexFile + 1)\n      ]\n    })\n    \n  }\n\n  handleNewFiles = () => {\n    this.setState({\n      dropZoneActive:true\n    })\n  }\n\n  handleNewFilesClose = () => {\n    this.setState({\n      dropZoneActive:false\n    })\n  }\n\n\n  handleEditModalOpen = event => {\n    this.setState({\n      isEditModalOpen:true\n    })\n  }\n\n  handleEditModalClose = event => {\n    this.setState({\n      isEditModalOpen:false\n    })\n  }\n\n\n  handleAddModalOpen = () => {\n    this.setState({\n      isModalOpen: true,\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      isModalOpen: false,\n    });\n  }\n\n\n  handleStatusChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ statusValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ status: data, page_num: 1 });\n    });\n  };\n\n  \n  submitData = data => {\n    var submit = true\n    if (submit) {\n      this.setState({ loaded: false });\n     \n      api(url_vendor  + this.state.data.id,'put', {\n        company_name: data.company_name,\n        owner_name: data.owner_name,\n        owner_phone: data.owner_phone,\n        contact_name: data.contact_name,\n        contact_phone: data.contact_phone,\n        city: data.city.value,\n        state: data.state.value,\n        address: data.address,\n        pincode: data.pincode,\n        source: data.source.value,\n        email: data.email,\n      }).then(response => {\n        const { data, message, success } = response;\n        StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n        if (success){\n          this.setState({            \n            data: data,\n            loaded: true,            \n          });\n          this.handleEditModalClose();\n        }else{\n          this.setState({\n            loaded:true\n          })\n        }\n      });\n      \n    }\n  }\n\n\n  handleDocConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isDocConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleDocConfModalClose = () => {\n    this.setState({\n      isDocConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n\n  handleDeleteDoc = () =>{\n    const dataId = this.state.activeDataId\n    var currentState = this.state.dataDocuments\n    var indexFile = currentState.findIndex(x => x.id === parseInt(dataId));\n    \n    api(url_document_delete  + dataId, 'delete' ,{}).then(response => {\n    const { message, success } = response;\n    StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n    if (success){\n      this.setState({dataDocuments: [\n        ...currentState.slice(0, indexFile),\n        ...currentState.slice(indexFile + 1)\n      ],\n      isDocConfModalOpen:false,\n      activeDataId:\"\"\n    });\n  }\n  })\n  .catch(error => console.log(error))\n}\n\n\n  handleFileUpload = () => {\n    this.setState({\n      loaded:false\n    })\n    const formData = new FormData();\n    for(var i = 0; i < this.state.fileList.length ; i += 1) {\n      formData.append(\"file\", this.state.fileList[i]);          \n    }\n    \n      fileHandlerApi(url_doc_upload + this.state.data.id ,formData)\n      .then(response => {\n        const {data, message, success } = response;\n        StatusAlertService.showAlert(message, success ? 'info': 'error',{autoHideTime:1000})\n\n      if (success){\n        this.setState({\n          fileList:[],\n          loaded:true ,\n          dataDocuments:[...this.state.dataDocuments,...data],\n          dropZoneActive:false            \n        });\n        }\n      }).catch(error => console.log(error))\n  }\n  // On Load\n  componentDidMount() {\n    var Path = window.location.pathname.split(\"/\")\n    var textPath = null;\n    textPath = decodeURIComponent(Path[3])\n    console.log(textPath)\n\n    // let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n    let filtersData =  {  is_all: \"1\" }\n\n    api(url_vendor + textPath, 'get', {}).then(response => {\n      const { data, success,filters } = response;\n      if (success) {\n        this.setState(\n          {\n            data: data,\n            dataDocuments:data.document_details,\n            stateOptions: JSON.parse(JSON.stringify(filters.states)),\n            cityOptions: JSON.parse(JSON.stringify(filters.cities)),\n            sourceOptions: JSON.parse(JSON.stringify(filters.source))\n\n          }\n        );\n\n        api(url_vendoritem + textPath, 'get', filtersData).then(response => {\n          const { data, filters, success, num_pages } = response;\n          if (success) {\n            this.setState(\n              {\n                dataItems: data,\n                dataCompare:data,\n                loaded: true,\n                numPages: num_pages,\n                sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n                orderByOptions: JSON.parse(JSON.stringify(filters.order_by)),\n                categoryOptions: JSON.parse(JSON.stringify(filters.category)),\n                statusOptions: JSON.parse(JSON.stringify(filters.status)),\n              }\n            );\n          }\n        });\n    \n      }\n    });\n\n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n\n    let renderBodyElement = null;\n    if (this.state.loaded === true) {\n      renderBodyElement = null;\n      renderBodyElement = this.state.dataItems.map((row, key) => {\n        return (\n                <GridColumn key = {key} medium={2} className=\"item-grid\">\n                  \n                      <div className=\"item-div-vendor\">\n                        <div className=\"item-div-internal-vendor\">\n                        <div className=\"item-remove-button-vendor\" data-id={row.id} onClick={this.handleConfModalOpen.bind(this)} >\n                          <div className=\"item-remove-icon-container\">\n                            <TrashIcon size={'medium'} ></TrashIcon>\n                          </div>\n                        </div>\n                        <Link to={\"/adminpanel/items/\" + row.item_details.id}>\n                          <div className=\"item-image-container-vendor\">\n                            <img alt={row.item_details.name} className=\"item-image\" src={row.item_details.image_details.length > 0 ? row.item_details.image_details[row.item_details.image_details.findIndex(x => x.is_primary === true) > 0 ? row.item_details.image_details.findIndex(x => x.is_primary === true) : 0].path : noImagePath}/>\n                          </div>\n                          <div className=\"item-name-vendor\">\n                            {changeCase.titleCase(row.item_details.name)} \n                            <br></br>\n                            {row.item_details.category_details && (\n                              <div className=\"category-pill\">{row.item_details.category_details ? titleCase(row.item_details.category_details.category + \" - \" + row.item_details.category_details.sub_category): \"\"}</div>\n                            )}\n                          </div>\n                        </Link>\n                          <div className=\"cost-price-container-vendor\">\n                            <div className=\"cost-price\">\n                                {\"₹ \" + row.cost_price}\n                            </div>\n                            <div data-id={row.id} onClick={this.handleEditorIconClick.bind(this)} className=\"cost-price-icon\">\n                              <EditorEditIcon />\n                            </div>\n                          </div>\n                        </div>  \n                        \n                    </div>\n                    \n                </GridColumn>\n        );\n      });\n    } else {\n      renderBodyElement = loaderArray.map((row, key) => {\n        return (\n                <GridColumn key={key} medium={2} className=\"item-grid\">\n                      <div className=\"item-div\">\n                        <div className=\"item-div-internal\">\n                          <div className=\"item-image-container\">\n                          </div>\n                          <div className=\"item-name\">\n                            <MyTextLoader/>\n                          </div>\n                        </div>  \n                    </div>\n\n                </GridColumn>\n        );\n      });\n    }\n\n  \n    let renderUploadedDocuments = null;\n    \n    renderUploadedDocuments = this.state.dataDocuments.map((row, key) => {\n    return (\n            <GridColumn key = {key} medium={4} className=\"item-grid\">\n                  <div className=\"file-div-showcase\">\n                    <div className=\"file-remove-button\" data-id={row.id} \n                    onClick={this.handleDocConfModalOpen.bind(this)} \n                    >\n                      <div className=\"item-remove-icon-container\">\n                        <TrashIcon size={'medium'} ></TrashIcon>\n                      </div>\n                    </div>\n                    <a href={row.path} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <div className=\"file-div-internal\">\n                        <div className=\"file-icon-showcase\">\n                          <DocumentFilledIcon></DocumentFilledIcon>\n                        </div>\n                        <div className=\"file-name-showcase\">\n                          {row.friendly_name}\n                        </div>\n                      </div>  \n                    </a>\n                </div>\n            </GridColumn>\n    );\n  });\n\n    let renderDocumentList = null;\n    \n    renderDocumentList = this.state.fileList.map((row, key) => {\n    return (\n            <Grid key = {key}>\n                  <div className=\"file-div\">\n                    <div className=\"file-div\">\n                      <div data-id={row.path}  className=\"remove-file\" onClick={this.handleFileRemoveClick}>\n                        Remove\n                      </div>\n                      <div className=\"file-name\">\n                        {row.name}\n                      </div>\n                    </div>  \n                </div>\n            </Grid>\n    );\n  });\n\n\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    var textPath = \"\"\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        textPath = \"\"\n        if (index === 3){\n          textPath = this.state.data ? changeCase.titleCase(this.state.data.company_name) : \"\"\n        }else{\n          textPath = changeCase.titleCase(Path[index])\n        }\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n                {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n\n        <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}></GridColumn>\n          <GridColumn medium={2}>\n            \n              <Button onClick={this.handleEditModalOpen} appearance=\"warning\">\n                Edit Vendor\n              </Button>\n            \n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <h3>Vendor Details</h3>\n        </Grid>\n        {/* <br></br> */}\n        <hr></hr>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={12}>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Company Name</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.company_name ? titleCase(this.state.data.company_name) : \"\"}</span></GridColumn>\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Email</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.email ? this.state.data.email : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Owner Name</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.owner_name ? titleCase(this.state.data.owner_name) : \"\"}</span></GridColumn>\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Owner Number</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.owner_phone ? (this.state.data.owner_phone) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Alt. Name</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.contact_name ? titleCase(this.state.data.contact_name) : \"\"}</span></GridColumn>\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Alt.  Phone</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.contact_phone ? (this.state.data.contact_phone) : \"\"}</span></GridColumn>\n              </Grid>\n              <Grid >\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Address</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.address ? titleCase(this.state.data.address + \", \"+ this.state.data.city + \", \"+ this.state.data.state + \", \"+ this.state.data.pincode) : \"\"}</span></GridColumn>\n                <GridColumn medium={2}><span className=\"item-details-text\"><b>Source</b></span></GridColumn> <GridColumn medium={4}><span className=\"item-details-text\">: {this.state.data.source ? titleCase(this.state.data.source) : \"\"}</span></GridColumn>\n              </Grid>\n            </GridColumn>\n              \n              <GridColumn medium={12}>\n                <br></br>\n              \n              <Grid layout=\"fluid\">\n                <h3>Vendor Documents</h3>\n              </Grid>\n              <hr></hr>      \n              <Grid> {renderUploadedDocuments} </Grid>\n              <Grid>\n              {(this.state.dropZoneActive)  && (\n                  <div className=\"drop-zone-file-div\">\n                  <div className=\"field-div\">\n                        <span className=\"field-label\">Documents</span>\n                        <Dropzone \n                          onDrop={acceptedFiles => this.handleFileDrop(acceptedFiles)}\n                        >\n                          {({getRootProps, getInputProps}) => (\n                            <section className=\"drop-container\">\n                              <div {...getRootProps({className: 'dropzone'})}>\n                                <input {...getInputProps()} />\n                                  Drag 'n' drop some files here, or click to select files\n                              </div>\n                            </section>\n                          )}\n                  </Dropzone>\n                \n                  </div>\n                    {(this.state.fileList.length > 0)  && (\n                    <div className=\"document-list\">\n                      {renderDocumentList}  \n                      <Button onClick={this.handleFileUpload} appearance=\"warning\">\n                        Upload\n                      </Button>\n                    </div>\n                  \n                  )}\n                </div>\n              )}\n              </Grid>\n              {(!this.state.dropZoneActive)  && (\n              <Grid> \n                <Button appearance={'info'} onClick={this.handleNewFiles}>\n                  Add New Files\n                </Button>\n              </Grid>\n              )}\n              {(this.state.dropZoneActive)  && (\n              <Grid> \n                <Button appearance={'info'} onClick={this.handleNewFilesClose}>\n                  Close File Upload\n                </Button>\n              </Grid>\n              )}\n\n              </GridColumn>\n              \n          \n        </Grid>\n        <br></br>\n        <br></br>\n        <Grid layout=\"fluid\">\n          <h3>Listed Items</h3>\n        </Grid>\n        {/* <br></br> */}\n        <hr></hr>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={8}></GridColumn>\n          <GridColumn medium={4}>\n            <div className=\"item-vendor-button-row\">\n            <div className=\"item-add-button-vendor\">\n            <Button onClick={this.handleAddModalOpen} appearance=\"warning\">\n              Add Existing Item\n            </Button>\n            </div>\n            <div className=\"item-add-button-vendor\">\n            <Link to={'/adminpanel/vendors/'+this.state.data.id + '/add-item'}>\n              <Button appearance=\"warning\">\n                Add New Item\n              </Button>\n            </Link>\n          </div>\n          </div>\n          </GridColumn>\n        </Grid>\n\n        <Grid layout=\"fluid\">\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={4}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Category</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"select\"\n                options={this.state.categoryOptions}\n                placeholder=\"Categories\"\n                onChange={this.handleCategoryChange}\n                value={this.state.categoryValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={3}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Status</span>\n              <CheckboxSelect\n                className=\"checkbox-select\"\n                classNamePrefix=\"sele\"\n                options={this.state.statusOptions}\n                placeholder=\"Status\"\n                onChange={this.handleStatusChange}\n                value={this.state.statusValue}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          {renderBodyElement}  \n        </Grid>            \n        {/* <Grid layout=\"fluid\">\n          <GridColumn medium={10}>\n          {(this.state.loaded && this.state.numPages > 1) && (\n          <ReactPaginate\n            previousLabel={'<'}\n            nextLabel={'>'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={this.state.numPages}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={this.handlePageClick}\n            containerClassName={'pagination'}\n            previousClassName={'pagination-next'}\n            nextClassName={'pagination-next'}\n            subContainerClassName={'pages-pagination'}\n            activeClassName={'active'}\n            forcePage={this.state.pageNum - 1}\n          />\n          )}\n          </GridColumn>\n          <GridColumn medium={2}>            \n          <div className=\"field-div-pagination\">\n          <Select\n            name=\"numItems\"\n            options={itemOptions}\n            // placeholder=\"4,5,6...\"\n            onChange={this.handleNumItemsChange}\n            value={this.state.pageSize}\n          />\n          </div>\n          </GridColumn>\n        </Grid>  \n           */}\n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isDocConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDeleteDoc },\n                { text: 'Close', appearance: 'normal', onClick: this.handleDocConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteDocConfHeader}>\n                {deleteDocConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n\n        <ModalTransition>\n          {this.state.costUpdateModal && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Update', appearance: 'warning', onClick: this.handleCostUpdate },\n                { text: 'Close', appearance: 'normal', onClick: this.handleCostModalClose },\n              ]\n            } onClose={this.handleCostModalClose} heading={\"Update Vendor Cost\"}>\n              <div className=\"field-div\">\n                  <span className=\"field-label\">Cost Price (INR)</span>\n                    <TextField \n                        placeholder=\"500, 1000 etc.\"\n                        name=\"CostPrice\" \n                        label=\"Cost Price\" \n                        type=\"number\"\n                        onChange={this.handleCostPriceChange}\n                        value={this.state.costPriceValue}\n                        />\n              </div>\n            </Modal>\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isModalOpen && (\n            <Modal autoFocus={false} width={'80%'} actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleModalClose },\n              ]\n            } onClose={this.handleModalClose} heading={\"Add Existing Items \"}>\n              <ItemsPage isVendorAdd={true} existingItems = {this.state.dataCompare} handleAddItem={this.handleAddItem}\n              ></ItemsPage>\n            </Modal>\n          )}\n        </ModalTransition>\n        \n        <ModalTransition>\n          {this.state.isEditModalOpen && (\n\n            <Modal autoFocus={false}  width={'80%'}  actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleEditModalClose },\n              ]\n            } onClose={this.handleEditModalClose} height={600} heading={\"Edit Vendor\"}>\n\n              <Form onSubmit={this.submitData}>\n                {({ formProps }) => (\n                  <form {...formProps}>\n                    <Grid>\n                    <GridColumn medium={6}>\n                        <Field name=\"company_name\" defaultValue={this.state.data.company_name}\n                              label=\"Company Name\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"company_email\" defaultValue={this.state.data.email}\n                              label=\"Company Email\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"owner_name\" defaultValue={this.state.data.owner_name}\n                              label=\"Owner Name\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"owner_phone\" defaultValue={this.state.data.owner_phone}\n                              label=\"Owner Phone\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"contact_name\" defaultValue={this.state.data.contact_name}\n                              label=\"Other Contact Name\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"contact_phone\" defaultValue={this.state.data.contact_phone}\n                              label=\"Other Contact Phone\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    <GridColumn medium={6}>\n                        <Field name=\"address\" defaultValue={this.state.data.address}\n                              label=\"Address\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n\n                    <GridColumn medium={3}>\n                        <Field name=\"city\" defaultValue={{ 'value': this.state.data.city, 'label': changeCase.titleCase(this.state.data.city) }}\n                              label=\"City\" \n                              >\n                          {({ fieldProps }) => <Select options={this.state.cityOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n                      <GridColumn medium={3}>\n                        <Field name=\"state\" defaultValue={{ 'value': this.state.data.state, 'label': changeCase.titleCase(this.state.data.state) }}\n                              label=\"State\" \n                              >\n                          {({ fieldProps }) => <Select options={this.state.stateOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n\n                    <GridColumn medium={4}>\n                        <Field name=\"pincode\" defaultValue={this.state.data.pincode}\n                              label=\"Pincode\" \n                              >\n                          {({ fieldProps }) => <TextField \n                          type=\"number\"\n                          // placeholder=\"eg. Inference\" \n                          {...fieldProps} />}\n                        </Field>\n                    </GridColumn>\n                    \n\n                      <GridColumn medium={8}>\n                        <Field name=\"source\" defaultValue={{ 'value': this.state.data.source, 'label': changeCase.titleCase(this.state.data.source) }}\n                              label=\"Source\" \n                              >\n                          {({ fieldProps }) => <CreatableSelect options={this.state.sourceOptions} \n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                    </Grid>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <br></br>\n                        <span className=\"invalid\">{this.state.submitError}</span>\n                        <br></br>\n                        <Button type=\"submit\" appearance=\"warning\">\n                          Submit\n                      </Button>\n                      </GridColumn>\n                    </Grid>\n                  </form>\n                )}\n              </Form>\n            </Modal>\n\n          )}\n        </ModalTransition>\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ItemCategory);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport '@atlaskit/css-reset';\nimport \"../css/dashboard.css\"\n\nimport { browserHistory } from 'react-router';\n//do something...\nimport Page from '@atlaskit/page';\n\n// Backend Connection\nimport { api } from \"../helpers/api\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\nimport authorization from \"../redux/actions/authorization\";\n\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\nimport TextField from '@atlaskit/textfield';\nimport Button from '@atlaskit/button';\nimport Cookies from 'universal-cookie';\n// import { Router, Route, Redirect, browserHistory  } from 'react-router';\n\nconst url=\"/v1/user/reset\";\n\nclass LoginPage extends Component {\n  static contextTypes = {\n    showModal: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onCancel: PropTypes.func,\n    onClose: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    }\n  }\n\n  handlePasswordchange = event => {\n    var data = event.target.value\n    this.setState({\n      password: data\n    });\n  };\n\n\n  handleReset = () => {\n    var Path = window.location.pathname.split(\"/\")\n    var secString = Path[3]\n    const password = this.state.password;\n    const cookies = new Cookies();\n    console.log(password,secString)\n    const payload = {\n      sec_string:secString,\n      pass:password\n    }\n    api(url,'post-formdata', payload)\n      .then(response => {\n        const { data, message, success,auth} = response;\n        StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:2000})\n\n        if (success) {\n          this.props.actions.loginUser({\n            auth:auth,\n            auth_token: data.auth_token,\n            email: data.email,\n            first_name: data.first_name,\n            id: data.id,\n            is_staff: data.is_staff,\n            last_name: data.last_name,\n          })\n          cookies.set('auth_token', data.auth_token, { path: '/' });\n          cookies.set('user_id', data.id, { path: '/' });\n          cookies.set('first_name', data.first_name, { path: '/' });\n          cookies.set('last_name', data.last_name, { path: '/' });\n          cookies.set('email', data.email, { path: '/' });\n          browserHistory.push(\"/adminpanel/items\");\n      }else{\n\n          cookies.set('auth_token', '', { path: '/' });\n          cookies.set('user_id', '', { path: '/' });\n          cookies.set('first_name', '', { path: '/' });\n          cookies.set('last_name', '', { path: '/' });\n          cookies.set('email', '', { path: '/' });\n\n        }\n    })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  }\n\n\n  render() {\n\n      return (\n        \n        <div className=\"outer-login\">\n          <div className=\"middle-login\">\n          <Page>\n  \n            <Grid>\n              <GridColumn medium={3}></GridColumn>\n              <GridColumn medium={6}>\n                <Grid>\n                  <div className=\"inner-login\">\n                    <GridColumn medium={12}>\n  \n                      <div className=\"image-container\">\n                        <div className=\"logo-image\"></div>\n                      </div>\n  \n                    </GridColumn>\n                    <GridColumn medium={12}>\n                    <GridColumn medium={12}>\n                      <div className=\"field-div\">\n                        <TextField type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handlePasswordchange} />\n                      </div>\n                    </GridColumn>\n                    <GridColumn medium={12}>\n                    <br></br>\n                      <div className=\"button-row-login\">\n                          <div className=\"login-button\">\n                          <Button onClick={this.handleReset} type=\"submit\" appearance=\"warning\">\n                            Reset Password\n                          </Button>\n                          </div>\n                        </div>\n                    </GridColumn>  \n                    </GridColumn>\n                  </div>\n                </Grid>\n              </GridColumn>\n              <GridColumn medium={3}></GridColumn>\n            </Grid>\n            </Page>\n          </div>\n        </div>\n        \n  \n      );\n    }\n  \n    }\n  \n\n\nfunction mapStateToProps(store) {\n  return {\n    ...store.authorization\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ \n      ...authorization\n     }, dispatch)\n  };\n}\n\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage);\n","// React\nimport React, { Component } from 'react';\n\n// Styles\nimport \"../../../css/dashboard.css\"\n\n// Backend Connection\nimport { api } from \"../../../helpers/api.jsx\";\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\n// Atlaskit Packages\nimport Select from \"@atlaskit/select\";\nimport Button from '@atlaskit/button';\nimport DynamicTable from '@atlaskit/dynamic-table';\nimport SearchIcon from \"@atlaskit/icon/glyph/search\";\nimport DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport Form, { Field } from '@atlaskit/form';\nimport TextField from '@atlaskit/textfield';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport { StatusAlertService } from 'react-status-alert'\nimport 'react-status-alert/dist/status-alert.css'\n\n//Icons\nimport ArrowDownCircleIcon from '@atlaskit/icon/glyph/arrow-down-circle';\nimport ArrowUpCircleIcon from '@atlaskit/icon/glyph/arrow-up-circle';\nimport pathIcon from \"../../../routing/BreadCrumbIcons\"\n\n// Components\n// import ContentWrapper from '../../../components/ContentWrapper';\n\n// Other Packages\nimport ReactPaginate from 'react-paginate';\nimport styled from \"styled-components\";\nvar changeCase = require(\"change-case\");\n\n// api url path\nvar url = \"/v1/users\";\nconst loaderURL = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/loading-gifs/deadpool.gif\"\n\nconst itemOptions = [\n  {'value':10,'label':'10 Items/Page'},\n  {'value':20,'label':'20 Items/Page'},\n  {'value':30,'label':'30 Items/Page'},\n  {'value':50,'label':'50 Items/Page'},\n  {'value':100,'label':'100 Items/Page'}\n]\n\nconst emptyModalData = {\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"email\": \"\",\n  \"phone_number\": \"\",\n  \n};\n\nconst deleteConfMessage = \"Are you sure you want to delete the user? \"\nconst deleteConfHeader = \"Confirm user deletion\"\n\nclass ItemCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // pagination variables\n      loaded: false,\n      pageNum: 1, //Current page\n      pageSize: {'value':20,'label':'20 Items/Page'},\n      \n      \n      // filter variables\n      sortByOptions: [],\n      orderByOptions: [],\n      categoryOptions: [],\n      searchIcon: true,\n      categoryValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      \n      // Modal variables\n\n      isModalOpen: false,\n      submitError: \"\",\n      isNew: true,\n      modalData: emptyModalData,\n      activeDataId: \"\",\n      isConfModalOpen:false,\n\n    };\n  }\n\n  hideSearchIcon = () => {\n    this.setState({ searchIcon: false });\n  };\n\n  showSearchIcon = event => {\n    if (event.target.value === \"\") {\n      this.setState({ searchIcon: true });\n    }\n  };\n\n\n  applyFilter = obj => {\n    this.setState({ loaded: false });\n    let payloadData = {\n      sort_by: this.state.sortValue ? this.state.sortValue.value : \"\",\n      order: this.state.orderBy,\n      search: this.state.searchValue,\n      page_num: 1,\n      page_size: this.state.pageSize.value,\n      category: (this.state.categoryValue).map(x => x['value']).join(\",\")\n    };\n    let payload = Object.assign({}, payloadData, obj);\n    // console.log(payload, \"Payload\");\n    api(url,'get', payload)\n      .then(response => {\n        const { data, success, num_pages } = response;\n        if (success) {\n          this.setState({\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n          });\n\n        }\n      })\n      .catch(error => {\n        console.log(\"Handle Filter Failed\");\n      });\n  };\n\n  // Filters Handling\n  handleNumItemsChange = value => {\n    this.setState({ pageSize: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ page_size: value ? value.value: \"\" , page_num: 1 });\n    });\n  }\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    this.setState({ pageNum: selected + 1 }, () => {\n      this.applyFilter({ page_num: selected + 1 });\n    });\n\n  };\n\n  handleSortChange = value => {\n    this.setState({ sortValue: value ? value: \"\" , pageNum: 1 }, () => {\n      this.applyFilter({ sort_by: value ? value.value: \"\" , page_num: 1 });\n    });\n  };\n\n  handleCategoryChange = value => {\n    const data = (value).map(x => x['value']).join(\",\");\n    this.setState({ categoryValue: value, pageNum: 1 }, () => {\n      this.applyFilter({ category: data, page_num: 1 });\n    });\n  };\n\n  toggleOrderBy = () => {\n    let orderBy = this.state.orderBy;\n    let toggle = orderBy === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({ orderBy: toggle });\n    if (this.state.sortValue !== \"\") {\n      this.setState({ pageNum: 1 }, () => {\n        this.applyFilter({ order_by: toggle, page_num: 1 });\n      });\n    }\n  };\n\n  clearFilter = () => {\n    this.setState({\n      categoryValue: [],\n      searchValue: \"\",\n      sortValue: \"\",\n      orderBy: \"asc\",\n      pageNum: 1,\n      searchIcon: true\n    }, () => {\n      this.applyFilter();\n    });\n  }\n\n\n  handleSearchChange = event => {\n    const data = event.target.value\n    this.setState({ searchValue: data, pageNum: 1 }, () => {\n      this.applyFilter({ search: data, page_num: 1 });\n    });\n  }\n\n\n  handleConfModalOpen = event => {\n    const dataId = event.currentTarget.dataset.id;\n    this.setState({\n      isConfModalOpen:true,\n      activeDataId: parseInt(dataId,10)\n    })\n  }\n\n\n  handleConfModalClose = () => {\n    this.setState({\n      isConfModalOpen:false,\n      activeDataId:\"\"\n    })\n  }\n\n\n  handleDelete = () => {\n    const dataId = this.state.activeDataId\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === dataId);\n    api(url + '/' + dataId, 'delete',{}).then(response => {\n      const { message, success } = response;\n      StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n      if (success){\n        this.setState({            \n          data: [\n            ...this.state.data.slice(0, index),\n            ...this.state.data.slice(index + 1)\n          ],\n          loaded: true,    \n        });\n        this.handleConfModalClose();  \n      }else{\n        this.setState({\n          loaded:true\n        })\n      }\n    });\n  }\n\n  \n  handleEditModalOpen = event => {\n    const data_id = event.currentTarget.dataset.id\n    this.setState({ isNew: false, activeDataId: parseInt(data_id,10) });\n\n    api(url + '/' + data_id,'get', {}).then(response => {\n      const { data, success } = response;\n      if (success) {\n        this.setState(\n          {\n            modalData: data,\n          }, () => {\n            this.setState({ isModalOpen: true });\n          });\n      }\n    });\n  }\n\n\n  handleAddModalOpen = () => {\n    this.setState({\n      isModalOpen: true,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      isModalOpen: false,\n      isNew: true,\n      activeDataId: \"\",\n      modalData: Object.assign({}, emptyModalData)\n    });\n  }\n\n\n\n  \n  submitData = data => {\n    var submit = true\n    const dataList = this.state.data;\n    const index = dataList.findIndex(x => x.id === this.state.activeDataId);\n    console.log(index)\n    if (submit) {\n      this.setState({ loaded: false });\n      if (this.state.isNew) {\n        api(url, 'post' ,{\n          first_name: data.first_name,\n          last_name: data.last_name,\n          email: data.email,\n          phone_number: data.phone_number\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            this.setState({\n              data: [data, ...this.state.data],\n              loaded: true\n            });\n            this.handleModalClose();  \n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }else{\n        api(url + '/' + this.state.activeDataId,'put', {\n          first_name: data.first_name,\n          last_name: data.last_name,\n          email: data.email,\n          phone_number: data.phone_number\n        }).then(response => {\n          const { data, message, success } = response;\n          StatusAlertService.showAlert(message,success ? 'info': 'error',{autoHideTime:1000})\n          if (success){\n            this.setState({            \n              data: [\n                ...this.state.data.slice(0, index),\n                  data,\n                ...this.state.data.slice(index + 1)\n              ],\n              loaded: true,            \n            });\n            this.handleModalClose();\n          }else{\n            this.setState({\n              loaded:true\n            })\n          }\n        });\n      }\n    }\n  }\n\n\n  // On Load\n  componentDidMount() {\n    let filtersData =  {  page_num: this.state.pageNum, page_size: this.state.pageSize.value }\n    api(url, 'get', filtersData).then(response => {\n      const { data, filters, success, num_pages } = response;\n      if (success) {\n        this.setState(\n          {\n            data: data,\n            loaded: true,\n            numPages: num_pages,\n            sortByOptions: JSON.parse(JSON.stringify(filters.sort_by)),\n            orderByOptions: JSON.parse(JSON.stringify(filters.order_by))\n          }\n        );\n      }\n    });\n  }\n\n\n  render() {\n    // const caption = \"User Lists\";\n    const SearchIconContainer = styled.div`\n      position: absolute;\n      top: 49px;\n      left: 20px;\n    `;\n\n\n    const DataWrapper = styled.div`\n      width: 100%;\n      padding-top:15px;\n  `  ;\n\n    const SortIconContainer = styled.div`\n      margin-top:46px;\n      cursor:pointer\n  `  ;\n\n    const head = {\n      cells: [\n        {\n          key: \"first_name\",\n          content: \"First Name\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"last_name\",\n          content: \"Last Name\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"email\",\n          content: \"Email\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"phone_numer\",\n          content: \"Phone Number\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n        {\n          key: \"operations\",\n          content: \"Operations\",\n          width: 20,\n          isSortable: false,\n          shouldTruncate: false\n        },\n      ]\n    }\n\n\n    let rowRenderElement = null;\n    // if (this.state.loaded) {\n    rowRenderElement = this.state.data.map((row, index) => ({\n      key: `row.id`,\n      cells: [\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.first_name)\n        },\n        {\n          key: row.id,\n          content: changeCase.titleCase(row.last_name)\n        },\n        {\n          key: row.id,\n          content: row.email\n        },\n        {\n          key: row.id,\n          content: row.phone_number\n        },\n        {\n          key: row.id,\n          content: <DropdownMenu\n            trigger=\"Options\"\n            triggerType=\"button\"\n            shouldFlip={false}\n            position=\"bottom\"\n          >\n            <DropdownItemGroup key={row.id}>\n              <DropdownItem data-id={row.id} onClick={this.handleEditModalOpen.bind(this)}>Edit</DropdownItem>\n              <DropdownItem data-id={row.id} onClick={this.handleConfModalOpen.bind(this)}>Delete</DropdownItem>\n            </DropdownItemGroup>\n          </DropdownMenu>\n        },\n      ]\n    }\n    ));\n\n    let breadCrumbElement = null\n    var Path = window.location.pathname.split(\"/\")\n    breadCrumbElement = Path.map((row, index) => {\n      if (index > 1 && index < (Path.length)){\n        var textPath = changeCase.titleCase(Path[index])\n        var link =  (Path.slice(0,index + 1).join(\"/\"))\n        // console.log(index,textPath, link)\n        try{\n          return (<BreadcrumbsItem key={index} iconBefore={pathIcon[Path[index]]} href={link} text={textPath} />);\n        }\n        catch(err){\n          return (<BreadcrumbsItem key={index} href={link} text={textPath} />);\n        }\n      } else {\n        return null;\n      }\n      \n    });  \n\n    let orderByIcon = <SortIconContainer><ArrowUpCircleIcon></ArrowUpCircleIcon></SortIconContainer>\n    if (this.state.orderBy === \"asc\") {\n      orderByIcon = <SortIconContainer><ArrowUpCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowUpCircleIcon></SortIconContainer>\n    } else {\n      orderByIcon = <SortIconContainer><ArrowDownCircleIcon onClick={this.toggleOrderBy} className=\"sortIcon\"></ArrowDownCircleIcon></SortIconContainer>\n    }\n    return (\n      <div>\n                {(!this.state.loaded)  && (\n          <div className=\"overlay-loader\">\n            <div className=\"loader-container\">\n                <img alt=\"loader\" className=\"loader-image\" src={loaderURL}></img>\n            </div>\n          </div>\n        )}\n\n        <div className=\"dashboard-page\">\n        <Grid layout=\"fluid\">\n                <BreadcrumbsStateless>{breadCrumbElement}</BreadcrumbsStateless>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={10}></GridColumn>\n          <GridColumn medium={2}>\n          <Button onClick={this.handleAddModalOpen} appearance=\"warning\">\n            Add Member\n          </Button>\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              {this.state.searchIcon === true && (\n                <SearchIconContainer>\n                  <SearchIcon />\n                </SearchIconContainer>\n              )}\n              <span className=\"field-label\">Search</span>\n              <TextField\n                onFocus={this.hideSearchIcon}\n                onBlur={this.showSearchIcon}\n                onChange={this.handleSearchChange}\n                value={this.state.searchValue}\n                appearance=\"standard\"\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={7}>\n          </GridColumn>\n          <GridColumn medium={2}>\n            <div className=\"field-div\">\n              <span className=\"field-label\">Sort</span>\n              <Select\n                isClearable\n                className=\"single-select\"\n                classNamePrefix=\"react-select\"\n                options={this.state.sortByOptions}\n                placeholder=\"Sort By\"\n                value={this.state.sortValue}\n                onChange={this.handleSortChange}\n              />\n            </div>\n          </GridColumn>\n          <GridColumn medium={1}>\n            {orderByIcon}\n          </GridColumn>\n        </Grid>\n        <Grid layout=\"fluid\">\n          <DataWrapper>\n          {/* <Grid>\n                <GridColumn medium={12}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>\n              <br></br> */}\n            <DynamicTable\n              isLoading={!this.state.loaded}\n              head={head}\n              rows={rowRenderElement}\n              defaultPage={1}\n              className=\"user-table\"\n            />\n          \n          <Grid>\n                <GridColumn medium={10}>\n                {(this.state.loaded && this.state.numPages > 1) && (\n                <ReactPaginate\n                  previousLabel={'<'}\n                  nextLabel={'>'}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.numPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  previousClassName={'pagination-next'}\n                  nextClassName={'pagination-next'}\n                  subContainerClassName={'pages-pagination'}\n                  activeClassName={'active'}\n                  forcePage={this.state.pageNum - 1}\n                />\n                )}\n                </GridColumn>\n                <GridColumn medium={2}>            \n                <div className=\"field-div-pagination\">\n                <Select\n                  name=\"numItems\"\n                  options={itemOptions}\n                  // placeholder=\"4,5,6...\"\n                  onChange={this.handleNumItemsChange}\n                  value={this.state.pageSize}\n                />\n                </div>\n                </GridColumn>\n              </Grid>  \n          </DataWrapper>\n        </Grid>\n        <ModalTransition>\n          {this.state.isModalOpen && (\n\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Close', appearance: 'normal', onClick: this.handleModalClose },\n              ]\n            } onClose={this.handleModalClose} height={475} heading={(this.state.isNew ? \"Add\" : \"Edit\") + \" Member\"}>\n\n              <Form onSubmit={this.submitData}>\n                {({ formProps }) => (\n                  <form {...formProps}>\n                    <Grid>\n                    <GridColumn medium={12}>\n                        <Field name=\"first_name\" defaultValue={this.state.modalData.first_name}\n                              label=\"First Name\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField\n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                      <GridColumn medium={12}>\n                        <Field name=\"last_name\" defaultValue={this.state.modalData.last_name}\n                              label=\"Last Name\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField\n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                      <GridColumn medium={12}>\n                        <Field name=\"email\" defaultValue={this.state.modalData.email}\n                              label=\"Email\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField\n                          type=\"email\"\n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n                      <GridColumn medium={12}>\n                        <Field name=\"phone_number\" defaultValue={this.state.modalData.phone_number}\n                              label=\"Phone Number\" \n                              isRequired>\n                          {({ fieldProps }) => <TextField\n                          type=\"number\"\n                          // placeholder=\"eg. Sentence Correction\"\n                           {...fieldProps} />}\n                        </Field>\n                      </GridColumn>\n\n                    </Grid>\n                    <Grid>\n                      <GridColumn medium={12}>\n                        <br></br>\n                        <span className=\"invalid\">{this.state.submitError}</span>\n                        <br></br>\n                        <Button type=\"submit\" appearance=\"warning\">\n                          Submit\n                      </Button>\n                      </GridColumn>\n                    </Grid>\n                  </form>\n                )}\n              </Form>\n            </Modal>\n\n          )}\n        </ModalTransition>\n        <ModalTransition>\n          {this.state.isConfModalOpen && (\n            <Modal autoFocus={false}  actions={\n              [\n                { text: 'Confirmed', appearance: 'warning', onClick: this.handleDelete },\n                { text: 'Close', appearance: 'normal', onClick: this.handleConfModalClose },\n              ]\n            } onClose={this.handleConfModalClose} heading={deleteConfHeader}>\n                {deleteConfMessage}              \n            </Modal>\n\n          )}\n        </ModalTransition>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({}, dispatch)\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ItemCategory);\n","\n\n// Pages import\n// import QuestionFolderSelect from \"../pages/QuestionFolderSelect\";\n// import QuestionBankSubFolderSelect from \"../pages/QuestionBankSubFolderSelect\";\n// import QuestionManagement from \"../pages/QuestionManagement\";\n// import QuestionBankManagement from \"../pages/QuestionBankManagement\";\n\n\nimport LoginPage from \"../pages/LoginPage.jsx\";\nimport Logout from \"../pages/Logout.jsx\";\nimport Settings from \"../pages/Dashboard/DashboardPages/SettingsPage.jsx\";\nimport ItemCategoryManagement from \"../pages/Dashboard/DashboardPages/ItemCategoryManagement.jsx\"\nimport Items from \"../pages/Dashboard/DashboardPages/ItemManagement.jsx\";\nimport AddEditItems from \"../pages/Dashboard/DashboardPages/AddEditItem\";\nimport VendorManagement from \"../pages/Dashboard/DashboardPages/VendorManagement\";\nimport ItemDetails from \"../pages/Dashboard/DashboardPages/ItemDetails\";\nimport VendorDetails from \"../pages/Dashboard/DashboardPages/VendorDetails\";\nimport ForgetPassword from \"../pages/ForgetPassword\";\n\n// icons import\nimport GearIcon from '@atlaskit/icon/glyph/settings';\nimport SignOutIcon from '@atlaskit/icon/glyph/sign-out';\nimport TrayIcon from '@atlaskit/icon/glyph/tray';\nimport MarketplaceIcon from '@atlaskit/icon/glyph/marketplace';\nimport StaffManagement from \"../pages/Dashboard/DashboardPages/StaffManagement.jsx\";\n\nconst basePath = \"\"\nconst Routes = [\n  \n  {\n    pageType:\"login\",\n    path:  basePath +  \"/adminpanel\",\n    component: LoginPage,\n  },\n  {\n    path:  basePath +  \"/adminpanel/items/:itemid/edit-item\",\n    component: AddEditItems,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    navbarDisplayName: \"Item Details\",\n    navbarIcon:TrayIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/vendors/:vendorid/add-item\",\n    component: AddEditItems,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    navbarDisplayName: \"Vendor Details\",\n    navbarIcon:TrayIcon\n  },\n\n  {\n    path:  basePath +  \"/adminpanel/items/add-item\",\n    component: AddEditItems,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    navbarDisplayName: \"Item Details\",\n    navbarIcon:TrayIcon\n  },\n\n  {\n    path:  basePath +  \"/adminpanel/items/:itemid\",\n    component: ItemDetails,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    navbarDisplayName: \"Item Details\",\n    navbarIcon:TrayIcon\n  },\n\n  {\n    path:  basePath +  \"/adminpanel/items\",\n    component: Items,\n    pageType:\"dashboard\",\n    viewLevel:1,\n    navbarDisplayName: \"Item Details\",\n    navbarIcon:TrayIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/vendors/:vendorid\",\n    component: VendorDetails,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    navbarDisplayName: \"Vendor Management\",\n    navbarIcon:MarketplaceIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/vendors\",\n    component: VendorManagement,\n    pageType:\"dashboard\",\n    viewLevel:1,\n    navbarDisplayName: \"Vendor Management\",\n    navbarIcon:MarketplaceIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/settings\",\n    component: Settings,\n    pageType:\"dashboard\",\n    viewLevel:1,\n    navbarDisplayName: \"Settings\",\n    navbarIcon:GearIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/settings/item-category-management\",\n    component: ItemCategoryManagement,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    redirect:false,\n    navbarDisplayName: \"Settings\",\n    navbarIcon:GearIcon\n  },\n  {\n    path:  basePath +  \"/adminpanel/settings/staff-management\",\n    component: StaffManagement,\n    pageType:\"dashboard\",\n    viewLevel:2,\n    redirect:false,\n    navbarDisplayName: \"Settings\",\n    navbarIcon:GearIcon\n  },\n\n  {\n    path:  basePath +  \"/adminpanel/logout\",\n    component: Logout,\n    pageType:\"dashboard\",\n    viewLevel:1,\n    redirect:false,\n    navbarDisplayName: \"Logout\",\n    navbarIcon:SignOutIcon\n  },\n  {\n    pageType:\"login\",\n    path:  \"/\",\n    component: LoginPage,\n  },\n\n  {\n    path:  basePath +  \"/adminpanel/passreset/:secstring\",\n    component: ForgetPassword,\n    pageType:\"passoword Reset\",\n    viewLevel:1,\n    // redirect:false,\n    // navbarDisplayName: \"Test Usage\",\n    // navbarIcon:VidConnectionCircleIcon\n  },\n\n  // // Question Management Paths\n  // {\n  //   path:  basePath +  \"/adminpanel/question-folder/\",\n  //   component: QuestionFolderSelect,\n  //   pageType:\"dashboard\",\n  //   viewLevel:1,\n  //   redirect:false,\n  //   navbarDisplayName: \"Question Banks\",\n  //   navbarIcon:TrayIcon\n  // },\n\n  // {\n  //   path:  basePath +  \"/adminpanel/question-folder/:foldername/\",\n  //   component: QuestionBankSubFolderSelect,\n  //   pageType:\"dashboard\",\n  //   viewLevel:2,\n  //   redirect:false,\n  //   navbarDisplayName: \"Question Banks\",\n  //   navbarIcon:TrayIcon\n  // },\n\n\n  // {\n  //   path:  basePath +  \"/adminpanel/question-folder/:foldername/:bankname/\",\n  //   component: QuestionManagement,\n  //   pageType:\"dashboard\",\n  //   viewLevel:3,\n  //   redirect:false,\n  //   navbarDisplayName: \"Question Banks\",\n  //   navbarIcon:TrayIcon\n  // },\n  // {\n  //   path:  basePath +  \"/adminpanel/settings/\",\n  //   component: Settings,\n  //   pageType:\"dashboard\",\n  //   viewLevel:1,\n  //   redirect:false,\n  //   navbarDisplayName: \"Settings\",\n  //   navbarIcon:GearIcon\n  // },\n  // {\n  //   path:  basePath +  \"/adminpanel/settings/question-bank-management/\",\n  //   component: QuestionBankManagement,\n  //   pageType:\"dashboard\",\n  //   viewLevel:2,\n  //   redirect:false,\n  //   navbarDisplayName: \"Settings\",\n  //   navbarIcon:GearIcon\n  // },\n  // {\n  //   path:  basePath +  \"/adminpanel/logout/\",\n  //   component: Logout,\n  //   pageType:\"dashboard\",\n  //   viewLevel:1,\n  //   redirect:false,\n  //   navbarDisplayName: \"Logout\",\n  //   navbarIcon:SignOutIcon\n  // }\n  // { redirect: true, path:  basePath +  \"/adminpanel\", to: \"/adminpanel/home\" }\n];\n\nexport default Routes;\n","/** @jsx jsx */\nimport { Link } from 'react-router';\nimport Routes from \"../routing/RoutesList\"\n\n\nimport { jsx } from '@emotion/core';\n\n\nimport {\n  ButtonItem,\n  NavigationFooter,\n  NavigationHeader,\n  NestableNavigationContent,\n  // NestingItem,\n  Section,\n  SideNavigation,\n} from '@atlaskit/side-navigation';\n\n\nconst url = \"http://www.thedecorshop.in\"\nlet companyLogo = \"https://thedecorshop.s3.ap-south-1.amazonaws.com/web-images/logo/thedecorshop-logo-transparent.png\"\n\nfunction checkBase(value){\n  var Path = window.location.pathname.split(\"/\")\n  var basePath = (Path.slice(0,3).join(\"/\"))\n  if (value ===basePath){\n    return true\n  }else{\n    return false\n  }\n}\n\n\nconst DashboardNavigation = () => {\n  \n  return (\n      <SideNavigation label=\"project\" testId=\"side-navigation\">\n        <NavigationHeader>\n          <a href={url}>\n            <img className=\"logo-side-navbar\" alt=\"TheDecorShop\" src={companyLogo} />\n          </a>\n\n        </NavigationHeader>\n        <NestableNavigationContent\n          initialStack={[]}\n          testId=\"nestable-navigation-content\"\n        >\n          <Section>\n            {/* <NestingItem\n              id=\"2\"\n              testId=\"filter-nesting-item\"\n              title=\"Filters\"\n              iconBefore={<FilterIcon label=\"\" />}\n            >\n              <Section>\n                <ButtonItem>Search issues</ButtonItem>\n              </Section>\n              <Section title=\"Starred\">\n                <ButtonItem>Everything me</ButtonItem>\n                <ButtonItem>My open issues</ButtonItem>\n                <ButtonItem>Reported by me</ButtonItem>\n              </Section>\n            </NestingItem>\n            <ButtonItem iconBefore={<WorkIcon label=\"\" />}>\n              Your work\n            </ButtonItem> */}\n            {\n              Routes.map((prop, key) => {\n                const url = prop.path;\n                const title = prop.navbarDisplayName;\n                const Icon = prop.navbarIcon\n                if (prop.pageType === \"dashboard\" && prop.viewLevel === 1) {\n                  return (\n                    <Link key={key} to={url}>\n                      <ButtonItem iconBefore={<Icon/>} isSelected={checkBase(url)}>{title}</ButtonItem>\n                    </Link>\n                  );\n                }else{\n                  return null\n                }\n              }, this)\n            }\n\n\n          </Section>\n        </NestableNavigationContent>\n        <NavigationFooter>\n          {/* <SampleFooter /> */}\n        </NavigationFooter>\n      </SideNavigation>\n  );\n};\n\nexport default DashboardNavigation;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Page from '@atlaskit/page';\nimport '@atlaskit/css-reset';\n\nimport DashboardNavigation from '../../components/DashboardNavigation';\nimport Cookies from 'universal-cookie';\nimport { browserHistory } from 'react-router';\nimport { api } from \"../../helpers/api\";\nimport authorization from \"../../redux/actions/authorization\";\n\n// Redux \nimport { connect } from \"react-redux\";\n\n// Redux dispatch\nimport { bindActionCreators } from \"redux\";\n\nconst url=\"/v1/user/login\";\n\n\nclass App extends Component {\n  state = {\n\n  };\n\n  static contextTypes = {\n    navOpenState: PropTypes.object,\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    navOpenState: PropTypes.object,\n    onNavResize: PropTypes.func,\n  };\n\n\n  componentDidMount(){\n    const cookies = new Cookies();\n    const auth_token = cookies.get('auth_token')\n    const payload={auth_token:auth_token}\n    if (!this.props.loggedIn){\n      api(url, 'post-formdata' ,payload)\n      .then(response => {\n        const { data, success,auth} = response;\n        // console.log(result)        \n        if (success) {\n            this.props.actions.loginUser({\n              auth:auth,\n              auth_token: data.auth_token,\n              email: data.email,\n              first_name: data.first_name,\n              id: data.id,\n              is_staff: data.is_staff,\n              last_name: data.last_name,\n            });\n            console.log('loggin in try')\n        }else{\n          browserHistory.push(\"/adminpanel\");\n          console.log('not logged in')\n        }\n    });\n  }     \n  }\n\n  render() {\n    return (\n      <div className=\"sidebar-app\">\n        <Page\n          // navigationWidth={this.context.navOpenState.width}\n          navigation={<DashboardNavigation/>}\n        >\n          {this.props.children}\n        </Page>        \n        \n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(store) {\n  return {\n    ...store.authorization\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...authorization }, dispatch)\n  };\n}\n\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n\n\n","import {\n    handleActions\n} from 'redux-actions';\nimport actionTypes from '../actionTypes';\n\nconst defaultState = {\n    userFirstName:'',\n    userLastName:'',\n    userEmail:'',\n    userAuthToken:'',\n    userIsStaff:false,\n    loggedIn:false,\n    userId:''\n}\n\nexport default handleActions({\n    [actionTypes.LOGIN_USER](state, {payload}){\n        // debugger;\n        const {auth,\n            auth_token,\n            email,\n            first_name,\n            id,\n            is_staff,\n            last_name\n            } = payload\n \n        return {\n            ...state,\n            userFirstName:first_name,\n            userLastName:last_name,\n            userEmail:email,\n            userAuthToken:auth_token,\n            userIsStaff:is_staff,\n            loggedIn:auth,\n            userId:id\n        }\n    },\n\n    [actionTypes.LOGOUT_USER](state, {payload}){\n        // debugger;\n        return {\n            ...state,\n            userFirstName:'',\n            userLastName:'',\n            userEmail:'',\n            userAuthToken:'',\n            userIsStaff:false,\n            loggedIn:false,\n            userId:''\n        }\n    },\n\n},\n defaultState\n)\n\n","\nimport { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport authorization from \"./authorization\";\n\n\nexport default combineReducers({\n  routing: routerReducer,  \n  authorization\n});\n","import createStore from './redux/create'\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = createStore(BrowserRouter);\n\nexport default store;\n","import {\n    createStore as _createStore,\n    applyMiddleware\n} from 'redux';\nimport {\n    routerMiddleware\n} from 'react-router-redux';\nimport reduxPromise from 'redux-promise';\nimport reducers from './reducers';\n\nexport default function createStore(history) {\n    // Sync dispatched route actions to the history\n    const reduxRouterMiddleware = routerMiddleware(history);\n\n    const middleware = [reduxRouterMiddleware, reduxPromise];\n\n    let finalCreateStore;\n    finalCreateStore = applyMiddleware(...middleware)(_createStore);\n\n    const store = finalCreateStore(\n        reducers, {},\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n\n    return store;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport DashboadSidebarApp from '../pages/Dashboard/DashboardSidebarApp.jsx';\nimport Routes from \"./RoutesList\"\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport StatusAlert from 'react-status-alert'\n\nexport default class MainRouter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      navOpenState: {\n        isOpen: true,\n        width: 304,\n      }\n    }\n  }\n\n  getChildContext () {\n    return {\n      navOpenState: this.state.navOpenState,\n    };\n  }\n\n  appWithSidebar = () => (props) => (\n    <DashboadSidebarApp\n      onNavResize={this.onNavResize}\n      {...props}\n    />\n  )\n\n\n  onNavResize = (navOpenState) => {\n    this.setState({\n      navOpenState,\n    });\n  }\n  store\n  render() {\n    return (\n      \n      <Provider store={store} key=\"provider\">\n      <Router history={browserHistory}>\n        {\n          Routes.map((prop, key) => {\n            if (prop.pageType === \"dashboard\"){\n              return (\n                <Route key={key} component={this.appWithSidebar()}>\n                  <Route path={prop.path} component={prop.component} key={key} />\n                </Route>\n              );\n            }else{\n              return(\n                <Route path={prop.path} component={prop.component} key={key} />\n              )\n            }\n          })\n        }\n      </Router>\n      <StatusAlert/>\n      </Provider>\n      \n      \n    );\n  }\n}\n\nMainRouter.childContextTypes = {\n  navOpenState: PropTypes.object,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainRouter from '../src/routing/MainRouter';\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<MainRouter />, document.getElementById('app-root'));\n"],"sourceRoot":""}